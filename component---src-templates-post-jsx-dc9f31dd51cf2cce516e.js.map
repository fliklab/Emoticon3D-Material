{"version":3,"sources":["webpack:///./src/components/UserInfo/index.jsx","webpack:///./src/components/Disqus/index.jsx","webpack:///./src/components/ToggleButton/index.jsx","webpack:///./src/components/PostInfo/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/components/PostSuggestions/index.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/index.jsx","webpack:///./src/components/ToolbarActions/index.jsx","webpack:///./src/components/Footer/index.jsx","webpack:///./src/components/Navigation/NavList.jsx","webpack:///./src/components/Navigation/index.jsx","webpack:///./src/components/BottomNav/index.jsx","webpack:///./src/components/TopNav/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx"],"names":["UserInfo","render","_this$props$config","this","props","config","userAvatar","userName","userLocation","userDescription","userLinks","userTwitter","expanded","userLinksElement","react_default","a","createElement","UserLinks","labeled","Card_default","className","CardTitle_default","expander","avatar","Avatars_default","src","role","title","subtitle","dist","username","options","count","CardText_default","expandable","IconSeparator_default","label","iconBefore","FontIcons_default","iconClassName","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","_this$props","postNode","disqusShortname","post","frontmatter","url","urljoin","siteUrl","pathPrefix","fields","slug","icon","main_default","shortname","identifier","category_id","onNewComment","Snackbars_default","onDismiss","ToggleButtonCutom","_ref","value","_useState","useState","ToggleOn","setToggleOn","es","onClick","b","secondary","flat","swapTheming","raised","styles","postInfoWrapper","display","flexFlow","justifyContent","marginBottom","marginTop","column","flex","flexDirection","postButton","width","height","backgroundColor","borderRadius","textAlign","alignItems","marginLeft","postButtonText","color","fontSize","PostInfo","style","moment","date","format","dateFormat","timeToRead","gatsby_browser_entry","to","kebabCase_default","category","ToggleButton","SocialLinks","postPath","mobile","iconSize","renderShareCount","filter","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostSuggestions","prevSlug","prevTitle","nextSlug","nextTitle","forceFontSize","forceSize","PostTemplate","_React$Component","handleResize","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","location","pageContext","nexttitle","nextslug","prevtitle","prevslug","postOverlapClass","data","markdownRemark","id","postDefaultCategoryID","layout","Helmet_default","siteTitle","rel","href","SEO","postSEO","PostCover","coverHeight","coverClassName","Cards_default","components_PostInfo","dangerouslySetInnerHTML","__html","html","PostTags","tags","components_SocialLinks","components_UserInfo","components_Disqus","components_PostSuggestions_PostSuggestions","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","fixedFooter","siteDescription","siteRss","siteFBAppID","siteGATrackingID","dateFromFormat","userEmail","copyright","replace","substr","module","exports","getLinkElements","map","link","react__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_2___default","key","GetNavList","NavList","primaryText","leftIcon","component","Link","divider","forEach","rightIcons","react_md_es","BottomNav","alt","fullPage","topBlank","bottomBlank","content","TopNav","children","LocalTitle","Buttons_default","primary","MainLayout","components_TopNav","name","components_BottomNav","react__WEBPACK_IMPORTED_MODULE_2___default","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","image","postURL","postMeta","cover","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","fileEdges","coverNodeList","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","length","gatsby_image_default","fluid","outerWrapperClassName","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","query","PostCoverComponent","allFile","edges","_590853412"],"mappings":"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","file":"component---src-templates-post-jsx-dc9f31dd51cf2cce516e.js","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport IconSeparator from \"react-md/lib/Helpers/IconSeparator\";\nimport { Follow } from \"react-twitter-widgets\";\nimport UserLinks from \"../UserLinks\";\nimport \"./UserInfo.scss\";\n\nclass UserInfo extends Component {\n  render() {\n    const {\n      userAvatar,\n      userName,\n      userLocation,\n      userDescription,\n      userLinks,\n      userTwitter\n    } = this.props.config;\n    const { expanded } = this.props;\n    const userLinksElement = (\n      <UserLinks config={this.props.config} labeled={expanded} />\n    );\n    if (!userAvatar && !userName && !userLocation && !userDescription) {\n      if (userLinks) {\n        return (\n          <Card className=\"md-grid md-cell md-cell--12 user-info\">\n            {userLinksElement}\n          </Card>\n        );\n      }\n      return null;\n    }\n    return (\n      <Card className=\"md-grid md-cell md-cell--12 user-info\">\n        <CardTitle\n          expander={!expanded}\n          avatar={userAvatar && <Avatar src={userAvatar} role=\"presentation\" />}\n          title={userName && userName}\n          subtitle={\n            userTwitter ? (\n              <Follow\n                username={userTwitter}\n                options={{ count: expanded ? \"none\" : \"none\" }}\n              />\n            ) : (\n              \"Author\"\n            )\n          }\n        />\n        <CardText expandable={!expanded}>\n          {userLocation && (\n            <IconSeparator label={userLocation} iconBefore>\n              <FontIcon iconClassName=\"fa fa-map-marker\" />\n            </IconSeparator>\n          )}\n          <p>{userDescription && userDescription}</p>\n          {userLinksElement}\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Snackbar from \"react-md/lib/Snackbars\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode, expanded } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n\n    return (\n      <Card className='md-grid md-cell md-cell--12'>\n        <CardTitle\n          title='Comments'\n          avatar={<Avatar icon={<FontIcon>comment</FontIcon>} />}\n          expander={!expanded}\n        />\n        <CardText expandable={!expanded}>\n          <ReactDisqusComments\n            shortname={config.disqusShortname}\n            identifier={post.title}\n            title={post.title}\n            url={url}\n            category_id={post.category_id}\n            onNewComment={this.notifyAboutComment}\n          />\n        </CardText>\n        <Snackbar\n          toasts={this.state.toasts}\n          onDismiss={this.onSnackbarDismiss}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-md\";\n\nconst ToggleButtonCutom = ({ value }) => {\n  const [ToggleOn, setToggleOn] = useState(false);\n\n  const handleChange = () => {\n    setToggleOn(b => !b);\n  };\n\n  return (\n    <Button\n      onClick={handleChange}\n      secondary\n      flat\n      swapTheming={ToggleOn}\n      raised={ToggleOn}\n    >\n      {ToggleOn ? \"내 모델에 추가됨\" : \"내 모델에 추가하기\"}\n    </Button>\n    //     <DialogContainer\n    //     id=\"speed-boost\"\n    //     visible={visible}\n    //     title=\"Use Google's location service?\"\n    //     onHide={this.hide}\n    //     aria-describedby=\"speed-boost-description\"\n    //     modal\n    //     actions={actions}>\n    //     <p id=\"speed-boost-description\" className=\"md-color--secondary-text\">\n    //       Let Google help apps determine location. This means sending anonymous\n    //       location data to Google, even when no apps are running.\n    //     </p>\n    //   </DialogContainer>\n  );\n};\n\nexport default ToggleButtonCutom;\n","import React, { Component } from \"react\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport ToggleButtonCutom from \"../ToggleButton\";\n\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostInfo.scss\";\n\nconst styles = {\n  postInfoWrapper: {\n    display: \"flex\",\n    flexFlow: \"rowWrap\",\n    justifyContent: \"space-between\",\n    marginBottom: \"30px\",\n    marginTop: \"10px\"\n  },\n  column: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  postButton: {\n    display: \"flex\",\n    width: \"160px\",\n    height: \"40px\",\n    backgroundColor: \"#666\",\n    borderRadius: \"10px\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"20px\",\n    marginLeft: \"0px\"\n  },\n  postButtonText: {\n    color: \"#fff\",\n    fontSize: 14\n  }\n};\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props;\n    const post = postNode.frontmatter;\n    return (\n      <div style={styles.postInfoWrapper}>\n        <div style={styles.column}>\n          <CardTitle\n            avatar={\n              <Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />\n            }\n            title={`${moment(postNode.fields.date).format(config.dateFormat)}`}\n            subtitle={`출력예상시간 : ${postNode.timeToRead}시간 이내`}\n          />\n          <Link\n            className=\"category-link\"\n            to={`/categories/${_.kebabCase(post.category)}`}\n          />\n        </div>\n        <div style={styles.column}>\n          <ToggleButtonCutom value=\"adfadf\" />\n          <div style={styles.postButton}>\n            <Link to=\"/reserv\">\n              <p style={styles.postButtonText}>예약하기</p>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostInfo;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React, { Component } from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport \"./PostSuggestions.scss\";\n\nexport default class PostSuggestions extends Component {\n  render() {\n    const { prevSlug, prevTitle, nextSlug, nextTitle } = this.props;\n\n    return (\n      <div className=\"post-suggestions md-grid md-cell--12\">\n        <Link to={prevSlug} className=\"post-suggestion\">\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_back\n          </FontIcon>\n          <div className=\"headline-container hide-on-mobile\">\n            <h2 className=\"md-body-2 secondary-color\">Previous</h2>\n            <h6 className=\"md-headline secondary-color\">{prevTitle}</h6>\n          </div>\n        </Link>\n        <Link to={nextSlug} className=\"post-suggestion\">\n          <div className=\"headline-container\">\n            <h2 className=\"md-body-2 secondary-color\">Next</h2>\n            <h6 className=\"md-headline secondary-color\">{nextTitle}</h6>\n          </div>\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_forward\n          </FontIcon>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Card from \"react-md/lib/Cards\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo\";\nimport Disqus from \"../components/Disqus\";\nimport PostTags from \"../components/PostTags\";\nimport PostCover from \"../components/PostCover\";\nimport PostInfo from \"../components/PostInfo\";\nimport SocialLinks from \"../components/SocialLinks\";\nimport PostSuggestions from \"../components/PostSuggestions\";\nimport SEO from \"../components/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.scss\";\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    this.setState({ mobile: true });\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { location, pageContext } = this.props;\n    const { slug, nexttitle, nextslug, prevtitle, prevslug } = pageContext;\n    const expanded = !mobile;\n    const postOverlapClass = mobile ? \"post-overlap-mobile\" : \"post-overlap\";\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n\n    if (!post.id) {\n      // md파일들의 제목을 slug에 정의한 형태로 저장\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n\n    const coverHeight = 400;\n    return (\n      <Layout location={location}>\n        <div className='post-page md-grid md-grid--no-spacing'>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel='canonical' href={`${config.siteUrl}${post.id}`} />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <PostCover\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName='md-grid md-cell--9 post-cover'\n          />\n          <div\n            className={`md-grid md-cell--9 post-page-contents mobile-fix ${postOverlapClass}`}\n          >\n            <Card className='md-grid md-cell md-cell--12 post'>\n              <CardText className='post-body'>\n                <h1 className='md-display-2 post-header'>{post.title}</h1>\n                <PostInfo postNode={postNode} />\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </CardText>\n              <div className='post-meta'>\n                <PostTags tags={post.tags} />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={mobile}\n                />\n              </div>\n            </Card>\n            <UserInfo\n              className='md-grid md-cell md-cell--12'\n              config={config}\n              expanded={expanded}\n            />\n            <Disqus postNode={postNode} expanded={expanded} />\n          </div>\n\n          <PostSuggestions\n            prevSlug={prevslug}\n            prevTitle={prevtitle}\n            nextSlug={nextslug}\n            nextTitle={nexttitle}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Emoticon - 3DYo\", // Site title.\n  siteTitleShort: \"3DYo\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Emoticon - 3DYo\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://fliklab.github.io/Emoticon3D-Material\",\n  //pathPrefix: \"/\",\n  pathPrefix: \"/Emoticon3D-Material\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  fixedFooter: false, // Whether the footer component is fixed, i.e. always visible\n  siteDescription: \"A GatsbyJS stater with Material design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  siteGATrackingID: \"UA-47311644-4\", // Tracking code ID for google analytics.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-material-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"추가하기\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"YYYY/MM/DD\", // Date format for display.\n  userName: \"Emoticon\", // Username to display in the author segment.\n  userEmail: \"Emoticon-HCI@emoticon.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"CAU, Seoul\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/fliklab/Emoticon3D-Material\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"jsh852@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"UI Design Project by Team Emoticon, 2019-2 HCI\" // Copyright string for the footer of the website and RSS feed.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./UserLinks.scss\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <Button\n        icon={!labeled}\n        flat={labeled}\n        secondary\n        key={link.label}\n        iconClassName={link.iconClassName}\n        href={link.url}\n      >\n        {labeled ? link.label : \"\"}\n      </Button>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport UserLinks from \"../UserLinks\";\nimport \"./ToolbarActions.scss\";\n\nclass Toolbar extends Component {\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"toolbar-actions\">\n        <div className=\"userlinks-container\">\n          <UserLinks config={config} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport Button from 'react-md/lib/Buttons';\nimport { Link } from 'gatsby';\nimport UserLinks from '../UserLinks';\nimport config from '../../../data/SiteConfig';\nimport './Footer.scss';\n\nclass Footer extends Component {\n  render() {\n    const url = config.siteRss;\n    const { userLinks } = this.props;\n    const { copyright, fixedFooter } = config;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer className={fixedFooter ? 'footer footer-fixed' : 'footer'}>\n        {userLinks ? <UserLinks config={config} labeled /> : null}\n        <div className='notice-container'>\n          <div className='copyright'>\n            <h4>{copyright}</h4>\n          </div>\n\n          <div className='rss'>\n            <Link to={url}>\n              <Button flat secondary iconClassName='fa fa-rss'>\n                Subscribe\n              </Button>\n            </Link>\n          </div>\n          <div className='based-on'>\n            <h4>\n              Based on{' '}\n              <a href='https://github.com/Vagr9K/gatsby-material-starter'>\n                Gatsby Material Starter\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      leftIcon: <FontIcon>home</FontIcon>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        leftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    leftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/about/\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React, { Component } from 'react';\nimport NavigationDrawer from 'react-md/lib/NavigationDrawers';\nimport { Button } from 'react-md';\nimport Toolbar from '../ToolbarActions';\n\nimport Footer from '../Footer';\nimport GetNavList from './NavList';\nimport './Navigation.scss';\n\nconst rightIcons = [\n  <Button key='home' icon>\n    home\n  </Button>\n];\n\nclass Navigation extends Component {\n  render() {\n    const { children, config, LocalTitle } = this.props;\n    const footerLinks = LocalTitle !== 'About';\n    return (\n      <NavigationDrawer\n        drawerTitle={config.siteTitle}\n        toolbarTitle={LocalTitle}\n        contentClassName='main-content'\n        navItems={GetNavList(config)}\n        mobileDrawerType={NavigationDrawer.DrawerTypes}\n        tabletDrawerType={NavigationDrawer.DrawerTypes}\n        desktopDrawerType={NavigationDrawer.DrawerTypes}\n        toolbarActions={rightIcons}\n      >\n        <div className='main-container'>{children}</div>\n      </NavigationDrawer>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./BottomNav.scss\";\r\n\r\nclass BottomNav extends Component {\r\n  render() {\r\n    return (\r\n      <footer className='footer footer-fixed'>\r\n        <div className='boxes-container'>\r\n          <Link to='/search'>\r\n            <div className='button-group'>\r\n              <img\r\n                src='Emoticon3D-Material/assets/main1_64.png'\r\n                alt='icon'\r\n                className='button1'\r\n              />\r\n              <p className='button-label'>모델검색</p>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to='/more'>\r\n            <div className='button-group'>\r\n              <img\r\n                src='Emoticon3D-Material/assets/main2_64.png'\r\n                alt='icon'\r\n                className='button1'\r\n              />\r\n              <p className='button-label'>내3D모델</p>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to='/reserv'>\r\n            <div className='button-group'>\r\n              <img\r\n                src='Emoticon3D-Material/assets/main3_64.png'\r\n                alt='icon'\r\n                className='button1'\r\n              />\r\n              <p className='button-label'>예약하기</p>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to='/check_print3'>\r\n            <div className='button-group'>\r\n              <img\r\n                src='Emoticon3D-Material/assets/main4_64.png'\r\n                alt='icon'\r\n                className='button1'\r\n              />\r\n              <p className='button-label'>출력상태</p>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to='/about2'>\r\n            <div className='button-group'>\r\n              <img\r\n                src='Emoticon3D-Material/assets/main5_64.png'\r\n                alt='icon'\r\n                className='button1'\r\n              />\r\n              <p className='button-label'>더보기</p>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BottomNav;\r\n","import React, { Component } from \"react\";\nimport { navigate } from \"gatsby\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./TopNav.scss\";\n\nconst styles = {\n  fullPage: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  topBlank: {\n    width: \"100%\"\n  },\n  bottomBlank: {\n    width: \"100%\"\n  },\n  content: {\n    flex: 1,\n    width: \"500px\"\n  }\n};\n\nclass TopNav extends Component {\n  render() {\n    const { children, config, LocalTitle } = this.props;\n    return (\n      <div className='outerBox' style={styles.fullPage}>\n        <div style={styles.topBlank} />\n        <div style={styles.content}>{children}</div>\n        <div style={styles.bottomBlank} />\n        <div className='topnav-fixed'>\n          <Button\n            className='user-button'\n            icon='fa-back'\n            primary\n            key='about'\n            iconClassName='fa fa-arrow-left'\n            href='/Emoticon3D-Material'\n          />\n\n          <p>{LocalTitle}</p>\n          <Button\n            className='user-button'\n            icon='fa-home'\n            primary\n            key='about'\n            iconClassName='fa fa-home'\n            href='/Emoticon3D-Material'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopNav;\n","/** src/layout/index.jsx */\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"font-awesome/scss/font-awesome.scss\";\nimport { Link } from \"@reach/router\";\nimport { FontIcon } from \"react-md\";\n\nimport Navigation from \"../components/Navigation\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.scss\";\nimport \"./global.scss\";\n\nimport BottomNav from \"../components/BottomNav\";\nimport TopNav from \"../components/TopNav/index\";\n\nconst styles = {\n  fullPage: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  topBlank: {\n    width: \"100%\",\n    height: \"80px\"\n  },\n  bottomBlank: {\n    width: \"100%\",\n    height: \"70px\"\n  },\n  content: {\n    width: \"100%\",\n    height: \"1000px\"\n  }\n};\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <TopNav config={config} LocalTitle={this.props.title}>\n        <div style={styles.fullPage}>\n          <Helmet>\n            <meta name='description' content={config.siteDescription} />\n          </Helmet>\n          <div style={styles.topBlank} />\n          <div style={styles.content}>{children}</div>\n          <div style={styles.bottomBlank} />\n          <BottomNav />\n        </div>\n      </TopNav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className='post-tag-container'>\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className='post-preview-tags' />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n"],"sourceRoot":""}