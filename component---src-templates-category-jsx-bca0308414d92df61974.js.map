{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_PostListing__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","exports","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react_default","Card_default","key","path","raise","gatsby_browser_entry","style","textDecoration","to","Media_default","height","paddingBottom","PostCover","postNode","CardTitle_default","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment","date","format","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostTags","tags","PostListing","getPostList","postList","forEach","postEdge","push","node","fields","slug","frontmatter","cover","map","post","components_PostPreview"],"mappings":"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","file":"component---src-templates-category-jsx-bca0308414d92df61974.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport PostListing from '../components/PostListing';\nimport Layout from '../layout';\nimport config from '../../data/SiteConfig';\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout\n        location={this.props.location}\n        title={'MY 콜랙션'}\n        //title={category.charAt(0).toUpperCase() + category.slice(1)}\n      >\n        <div className='category-container'>\n          <Helmet>\n            <title>{`MY 콜랙션 - \"${category}\" | ${config.siteTitle}`}</title>\n            <link\n              rel='canonical'\n              href={`${config.siteUrl}/categories/${category}`}\n            />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from 'react';\nimport Card from 'react-md/lib/Cards/Card';\nimport CardTitle from 'react-md/lib/Cards/CardTitle';\nimport Button from 'react-md/lib/Buttons';\nimport Avatar from 'react-md/lib/Avatars';\nimport CardText from 'react-md/lib/Cards/CardText';\nimport FontIcon from 'react-md/lib/FontIcons';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport Media, { MediaOverlay } from 'react-md/lib/Media';\nimport PostTags from '../PostTags';\nimport PostCover from '../PostCover';\nimport config from '../../../data/SiteConfig';\nimport './PostPreview.scss';\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className='md-grid md-cell md-cell--12'>\n        <Link style={{ textDecoration: 'none' }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: '0px' }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className='md-cell--right'>\n                  바로 출력하기\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName='fa fa-calendar' />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`출력예상시간 : ${postInfo.timeToRead}시간 이내`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}