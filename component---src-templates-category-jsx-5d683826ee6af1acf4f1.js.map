{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_PostListing__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery"],"mappings":"0QAOqBA,4FACnBC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,SAAUX,KAAKC,MAAMU,SACrBC,MAAO,UAGPL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAAA,0BAAqBV,EAArB,OAAoCgB,IAAOC,WAC3CT,EAAAC,EAAAC,cAAA,QACEQ,IAAI,YACJC,KAASH,IAAOI,QAAZ,eAAkCpB,KAG1CQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAajB,UAAWA,UAlBYkB,IAAMC,WAyBvCC,EAAS","file":"component---src-templates-category-jsx-5d683826ee6af1acf4f1.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport PostListing from '../components/PostListing';\nimport Layout from '../layout';\nimport config from '../../data/SiteConfig';\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout\n        location={this.props.location}\n        title={'MY 콜랙션'}\n        //title={category.charAt(0).toUpperCase() + category.slice(1)}\n      >\n        <div className='category-container'>\n          <Helmet>\n            <title>{`MY 콜랙션 - \"${category}\" | ${config.siteTitle}`}</title>\n            <link\n              rel='canonical'\n              href={`${config.siteUrl}/categories/${category}`}\n            />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}