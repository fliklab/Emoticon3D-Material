{"version":3,"sources":["webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/index.jsx","webpack:///./src/components/ToolbarActions/index.jsx","webpack:///./src/components/Footer/index.jsx","webpack:///./src/components/Navigation/NavList.jsx","webpack:///./src/components/Navigation/index.jsx","webpack:///./src/components/BottomNav/index.jsx","webpack:///./src/components/TopNav/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js"],"names":["config","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","fixedFooter","siteDescription","siteRss","siteFBAppID","siteGATrackingID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","replace","substr","slice","module","exports","UserLinks","getLinkElements","this","props","labeled","map","link","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_2___default","icon","flat","secondary","key","href","render","className","Component","GetNavList","NavList","primaryText","leftIcon","react_default","FontIcons_default","component","Link","to","divider","forEach","push","forceSize","rightIcons","react_md_es","BottomNav","Buttons_default","TopNav","_this$props","children","LocalTitle","styles","layout","display","direction","topBlank","height","bottomBlank","contents","flex","MainLayout","components_TopNav","title","style","Helmet_default","name","content","components_BottomNav","React","PostTags","tags","react__WEBPACK_IMPORTED_MODULE_2___default","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","Card_default","path","raise","gatsby_browser_entry","Media_default","paddingBottom","PostCover","postNode","Media","CardTitle_default","raised","expander","avatar","Avatars_default","moment","date","format","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing","getPostList","postList","postEdges","postEdge","node","fields","slug","frontmatter","cover","post","components_PostPreview","fileEdges","coverClassName","coverNodeList","filter","fileNode","childImageSharp","absolutePath","indexOf","join","length","gatsby_image_default","fluid","outerWrapperClassName","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","query","data","PostCoverComponent","allFile","edges","_590853412","__esModule","MediaOverlay","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default"],"mappings":"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","file":"3-9941a0ce2e022e56179a.js","sourcesContent":["const config = {\n  siteTitle: \"Emoticon - 3DYo\", // Site title.\n  siteTitleShort: \"3DYo\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Emoticon - 3DYo\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://fliklab.github.io/Emoticon3D-Material\",\n  //pathPrefix: \"/\",\n  pathPrefix: \"/Emoticon3D-Material\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  fixedFooter: false, // Whether the footer component is fixed, i.e. always visible\n  siteDescription: \"A GatsbyJS stater with Material design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  siteGATrackingID: \"UA-47311644-4\", // Tracking code ID for google analytics.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-material-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"추가하기\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"YYYY/MM/DD\", // Date format for display.\n  userName: \"Emoticon\", // Username to display in the author segment.\n  userEmail: \"Emoticon-HCI@emoticon.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"CAU, Seoul\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/fliklab/Emoticon3D-Material\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"jsh852@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"UI Design Project by Team Emoticon, 2019-2 HCI\" // Copyright string for the footer of the website and RSS feed.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./UserLinks.scss\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <Button\n        icon={!labeled}\n        flat={labeled}\n        secondary\n        key={link.label}\n        iconClassName={link.iconClassName}\n        href={link.url}\n      >\n        {labeled ? link.label : \"\"}\n      </Button>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport UserLinks from \"../UserLinks\";\nimport \"./ToolbarActions.scss\";\n\nclass Toolbar extends Component {\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"toolbar-actions\">\n        <div className=\"userlinks-container\">\n          <UserLinks config={config} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport Button from 'react-md/lib/Buttons';\nimport { Link } from 'gatsby';\nimport UserLinks from '../UserLinks';\nimport config from '../../../data/SiteConfig';\nimport './Footer.scss';\n\nclass Footer extends Component {\n  render() {\n    const url = config.siteRss;\n    const { userLinks } = this.props;\n    const { copyright, fixedFooter } = config;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer className={fixedFooter ? 'footer footer-fixed' : 'footer'}>\n        {userLinks ? <UserLinks config={config} labeled /> : null}\n        <div className='notice-container'>\n          <div className='copyright'>\n            <h4>{copyright}</h4>\n          </div>\n\n          <div className='rss'>\n            <Link to={url}>\n              <Button flat secondary iconClassName='fa fa-rss'>\n                Subscribe\n              </Button>\n            </Link>\n          </div>\n          <div className='based-on'>\n            <h4>\n              Based on{' '}\n              <a href='https://github.com/Vagr9K/gatsby-material-starter'>\n                Gatsby Material Starter\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      leftIcon: <FontIcon>home</FontIcon>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        leftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    leftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/about/\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React, { Component } from 'react';\nimport NavigationDrawer from 'react-md/lib/NavigationDrawers';\nimport { Button } from 'react-md';\nimport Toolbar from '../ToolbarActions';\n\nimport Footer from '../Footer';\nimport GetNavList from './NavList';\nimport './Navigation.scss';\n\nconst rightIcons = [\n  <Button key='home' icon>\n    home\n  </Button>\n];\n\nclass Navigation extends Component {\n  render() {\n    const { children, config, LocalTitle } = this.props;\n    const footerLinks = LocalTitle !== 'About';\n    return (\n      <NavigationDrawer\n        drawerTitle={config.siteTitle}\n        toolbarTitle={LocalTitle}\n        contentClassName='main-content'\n        navItems={GetNavList(config)}\n        mobileDrawerType={NavigationDrawer.DrawerTypes}\n        tabletDrawerType={NavigationDrawer.DrawerTypes}\n        desktopDrawerType={NavigationDrawer.DrawerTypes}\n        toolbarActions={rightIcons}\n      >\n        <div className='main-container'>{children}</div>\n      </NavigationDrawer>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport { Link } from \"gatsby\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./BottomNav.scss\";\n\nclass BottomNav extends Component {\n  render() {\n    const deploy = false;\n    return (\n      <footer className='footer footer-fixed'>\n        <div className='boxes-container'>\n          <Button\n            className='user-button'\n            icon='fa-home'\n            secondary\n            key='about'\n            iconClassName='fa fa-home'\n            href={`${deploy ? config.pathPrefix : \"\"}/`}\n            //href='/'\n          >\n            <p>반갑다</p>\n          </Button>\n          <Button\n            className='user-button'\n            icon='fa-beer'\n            secondary\n            key='about'\n            iconClassName='fa fa-heart'\n            href={`${deploy ? config.pathPrefix : \"\"}/about`}\n            // href='/about'\n          >\n            <p>친구야</p>\n          </Button>\n\n          <Button\n            className='user-button'\n            icon='faHome' // ??\n            secondary\n            key='03_reserve/t3place'\n            iconClassName='fa fa-comment'\n            href={`${deploy ? config.pathPrefix : \"\"}/03_reserve/t3place`}\n            // href='/about'\n          >\n            <p>장소검색</p>\n          </Button>\n          <Button\n            className='user-button'\n            icon='faHome' // ??\n            secondary\n            key='check_print'\n            iconClassName='fa fa-book'\n            // href='/about'\n            href={`${deploy ? config.pathPrefix : \"\"}/check_print/`}\n          >\n            <p>출력상태</p>\n          </Button>\n          <Button\n            className='user-button'\n            icon='faHome' // ???\n            secondary\n            key='menu4'\n            iconClassName='fa fa-tag'\n            // href='/about'\n            href={`${deploy ? config.pathPrefix : \"\"}/about`}\n          >\n            <p>더보기</p>\n          </Button>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default BottomNav;\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport { Link } from \"gatsby\";\nimport \"./TopNav.scss\";\n\nclass TopNav extends Component {\n  render() {\n    const { children, config, LocalTitle } = this.props;\n    return (\n      <div className='outerBox'>\n        <div className='topnav-fixed'>\n          <Button\n            className='user-button'\n            icon='fa-back'\n            secondary\n            key='about'\n            iconClassName='fa fa-arrow-left'\n            href={`${config.pathPrefix}`}\n          />\n          <p className='topNav-title'>{LocalTitle}</p>\n          <Button\n            className='user-button'\n            icon='fa-home'\n            secondary\n            key='about'\n            iconClassName='fa fa-home'\n            href={`${config.pathPrefix}/`}\n          />\n        </div>\n        <div className='topnav-main-container'>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default TopNav;\n","/** src/layout/index.jsx */\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"font-awesome/scss/font-awesome.scss\";\nimport { Link } from \"@reach/router\";\nimport { FontIcon } from \"react-md\";\n\nimport Navigation from \"../components/Navigation\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.scss\";\nimport \"./global.scss\";\n\nimport BottomNav from \"../components/BottomNav\";\nimport TopNav from \"../components/TopNav/index\";\n\nconst styles = {\n  layout: {\n    display: \"flex\",\n    direction: \"column\"\n  },\n  topBlank: {\n    height: \"280px\"\n  },\n  bottomBlank: {\n    height: \"70px\"\n  },\n  contents: {\n    flex: 1\n  }\n};\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <TopNav config={config} LocalTitle={this.props.title}>\n        <div style={styles.layout}>\n          <Helmet>\n            <meta name='description' content={config.siteDescription} />\n          </Helmet>\n          <div style={styles.topBlank} />\n          <div style={styles.contents}> {children}</div>\n          <div style={styles.bottomBlank} />\n          <BottomNav />\n        </div>\n      </TopNav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from 'react';\nimport Card from 'react-md/lib/Cards/Card';\nimport CardTitle from 'react-md/lib/Cards/CardTitle';\nimport Button from 'react-md/lib/Buttons';\nimport Avatar from 'react-md/lib/Avatars';\nimport CardText from 'react-md/lib/Cards/CardText';\nimport FontIcon from 'react-md/lib/FontIcons';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport Media, { MediaOverlay } from 'react-md/lib/Media';\nimport PostTags from '../PostTags';\nimport PostCover from '../PostCover';\nimport config from '../../../data/SiteConfig';\nimport './PostPreview.scss';\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className='md-grid md-cell md-cell--12'>\n        <Link style={{ textDecoration: 'none' }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: '0px' }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className='md-cell--right'>\n                  바로 출력하기\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName='fa fa-calendar' />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`출력예상시간 : ${postInfo.timeToRead}시간 이내`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;"],"sourceRoot":""}