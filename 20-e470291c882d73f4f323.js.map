{"version":3,"sources":["webpack:///./node_modules/react-md/lib/Cards/Card.js","webpack:///./node_modules/react-md/lib/Cards/CardText.js","webpack:///./node_modules/react-md/lib/Cards/contextTypes.js","webpack:///./node_modules/elasticlunr/elasticlunr.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","_classnames2","_deprecated2","_controlled2","_getField2","_contextTypes2","_getDeprecatedIcon2","_FontIcon2","_Paper2","_Collapse2","obj","default","Card","_PureComponent","props","instance","Constructor","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","_handleMouseOver","e","onMouseOver","raise","_touched","setState","zDepth","_handleMouseLeave","onMouseLeave","state","_handleTouchStart","onTouchStart","_handleExpandClick","onExpanderClick","expanded","initiallyExpanded","defaultExpanded","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","getChildContext","_props","expanderTooltipLabel","expanderTooltipDelay","expanderTooltipPosition","expanderIcon","iconClassName","iconChildren","expanderIconClassName","expanderIconChildren","isExpanded","onExpandClick","icon","tooltipLabel","tooltipDelay","tooltipPosition","render","_props2","className","tableCard","children","animate","keys","indexOf","_objectWithoutProperties","expanderIndex","parts","Children","map","toArray","child","isExpander","expander","expandable","collapsed","createElement","md-card--raise","md-card--table","PureComponent","propTypes","style","object","string","node","bool","func","element","oneOf","number","defaultProps","childContextTypes","CardText","apply","Component","component","oneOfType","isRequired","_propTypes","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","Index","pipeline","add","trimmer","stopWordFilter","stemmer","version","lunr","utils","warn","message","console","toString","EventEmitter","events","addListener","args","Array","slice","fn","pop","names","forEach","name","hasHandler","push","removeListener","fnIndex","splice","emit","undefined","tokenizer","str","isArray","arr","filter","token","t","toLowerCase","out","item","tokens","split","seperator","concat","trim","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","load","serialised","fnName","Error","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","j","reset","get","toJSON","_fields","_ref","documentStore","DocumentStore","index","eventEmitter","_idfCache","on","bind","off","serialisedData","field","fields","ref","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","getDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","df","getDocFreq","log","getFields","search","query","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","results","score","sort","a","b","booleanType","expand","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","copy","attr","clone","updateFieldLength","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","","able","about","across","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","got","had","has","have","he","her","hers","him","his","how","however","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","often","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your","root","tokenInfo","hasToken","getNode","memo","parse","buildUserConfig","error","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","set","locationFor","ctx","elem","start","end","sectionLength","pivot","floor","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements","module"],"mappings":"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","file":"20-e470291c882d73f4f323.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _deprecated = require('react-prop-types/lib/deprecated');\n\nvar _deprecated2 = _interopRequireDefault(_deprecated);\n\nvar _controlled = require('../utils/PropTypes/controlled');\n\nvar _controlled2 = _interopRequireDefault(_controlled);\n\nvar _getField = require('../utils/getField');\n\nvar _getField2 = _interopRequireDefault(_getField);\n\nvar _contextTypes = require('./contextTypes');\n\nvar _contextTypes2 = _interopRequireDefault(_contextTypes);\n\nvar _getDeprecatedIcon = require('../FontIcons/getDeprecatedIcon');\n\nvar _getDeprecatedIcon2 = _interopRequireDefault(_getDeprecatedIcon);\n\nvar _FontIcon = require('../FontIcons/FontIcon');\n\nvar _FontIcon2 = _interopRequireDefault(_FontIcon);\n\nvar _Paper = require('../Papers/Paper');\n\nvar _Paper2 = _interopRequireDefault(_Paper);\n\nvar _Collapse = require('../Helpers/Collapse');\n\nvar _Collapse2 = _interopRequireDefault(_Collapse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Card = function (_PureComponent) {\n  _inherits(Card, _PureComponent);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._handleMouseOver = function (e) {\n      if (_this.props.onMouseOver) {\n        _this.props.onMouseOver(e);\n      }\n\n      if (_this.props.raise && !_this._touched) {\n        _this.setState({ zDepth: 4 });\n      }\n    };\n\n    _this._handleMouseLeave = function (e) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(e);\n      }\n\n      _this._touched = false;\n      if (_this.props.raise && _this.state.zDepth !== 1) {\n        _this.setState({ zDepth: 1 });\n      }\n    };\n\n    _this._handleTouchStart = function (e) {\n      if (_this.props.onTouchStart) {\n        _this.props.onTouchStart(e);\n      }\n\n      _this._touched = true;\n    };\n\n    _this._handleExpandClick = function (e) {\n      var onExpanderClick = _this.props.onExpanderClick;\n\n      var expanded = !(0, _getField2.default)(_this.props, _this.state, 'expanded');\n      if (onExpanderClick) {\n        onExpanderClick(expanded, e);\n      }\n\n      if (typeof _this.props.expanded === 'undefined') {\n        _this.setState({ expanded: expanded });\n      }\n    };\n\n    _this.state = {\n      zDepth: 1,\n      expanded: typeof props.initiallyExpanded !== 'undefined' ? props.initiallyExpanded : !!props.defaultExpanded\n    };\n    return _this;\n  }\n\n  Card.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        expanderTooltipLabel = _props.expanderTooltipLabel,\n        expanderTooltipDelay = _props.expanderTooltipDelay,\n        expanderTooltipPosition = _props.expanderTooltipPosition,\n        expanderIcon = _props.expanderIcon,\n        iconClassName = _props.iconClassName,\n        iconChildren = _props.iconChildren,\n        expanderIconClassName = _props.expanderIconClassName,\n        expanderIconChildren = _props.expanderIconChildren;\n\n\n    var expanded = typeof this.props.isExpanded !== 'undefined' ? this.props.isExpanded : (0, _getField2.default)(this.props, this.state, 'expanded');\n\n    return {\n      expanded: expanded,\n      onExpandClick: this._handleExpandClick,\n      icon: (0, _getDeprecatedIcon2.default)(iconChildren || expanderIconChildren, iconClassName || expanderIconClassName, expanderIcon),\n      tooltipLabel: expanderTooltipLabel,\n      tooltipDelay: expanderTooltipDelay,\n      tooltipPosition: expanderTooltipPosition\n    };\n  };\n\n  Card.prototype.render = function render() {\n    var zDepth = this.state.zDepth;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        raise = _props2.raise,\n        tableCard = _props2.tableCard,\n        children = _props2.children,\n        animate = _props2.animate,\n        propExpanded = _props2.expanded,\n        onExpanderClick = _props2.onExpanderClick,\n        defaultExpanded = _props2.defaultExpanded,\n        expanderIcon = _props2.expanderIcon,\n        expanderIconChildren = _props2.expanderIconChildren,\n        expanderIconClassName = _props2.expanderIconClassName,\n        expanderTooltipLabel = _props2.expanderTooltipLabel,\n        expanderTooltipDelay = _props2.expanderTooltipDelay,\n        expanderTooltipPosition = _props2.expanderTooltipPosition,\n        iconChildren = _props2.iconChildren,\n        iconClassName = _props2.iconClassName,\n        isExpanded = _props2.isExpanded,\n        initiallyExpanded = _props2.initiallyExpanded,\n        props = _objectWithoutProperties(_props2, ['className', 'raise', 'tableCard', 'children', 'animate', 'expanded', 'onExpanderClick', 'defaultExpanded', 'expanderIcon', 'expanderIconChildren', 'expanderIconClassName', 'expanderTooltipLabel', 'expanderTooltipDelay', 'expanderTooltipPosition', 'iconChildren', 'iconClassName', 'isExpanded', 'initiallyExpanded']);\n\n    var expanded = typeof this.props.isExpanded !== 'undefined' ? this.props.isExpanded : (0, _getField2.default)(this.props, this.state, 'expanded');\n    var expanderIndex = -1;\n    var parts = _react.Children.map(_react.Children.toArray(children), function (child, i) {\n      if (!child || !child.props) {\n        return child;\n      } else if (expanderIndex < 0 && (child.props.isExpander || child.props.expander)) {\n        expanderIndex = i;\n      }\n\n      if (!child.props.expandable) {\n        return child;\n      }\n\n      var collapsed = expanderIndex === -1 || expanderIndex === i || !expanded;\n      return _react2.default.createElement(\n        _Collapse2.default,\n        { collapsed: collapsed, animate: animate },\n        child\n      );\n    });\n\n    return _react2.default.createElement(\n      _Paper2.default,\n      _extends({}, props, {\n        zDepth: zDepth,\n        className: (0, _classnames2.default)('md-card', {\n          'md-card--raise': raise,\n          'md-card--table': tableCard\n        }, 'md-background--card', className),\n        onMouseOver: this._handleMouseOver,\n        onMouseLeave: this._handleMouseLeave,\n        onTouchStart: this._handleTouchStart\n      }),\n      parts\n    );\n  };\n\n  return Card;\n}(_react.PureComponent);\n\nCard.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: _propTypes2.default.object,\n\n  /**\n   * An optional className to apply to the card.\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * Any Card parts that should be rendered.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * Boolean if the card is expanded by default when there is an expander\n   * component.\n   */\n  defaultExpanded: _propTypes2.default.bool,\n\n  /**\n   * Boolean if the card should raise on hover when on a desktop display.\n   */\n  raise: _propTypes2.default.bool,\n\n  /**\n   * Boolean if the card is currently expanded. This will require the `onExpanderClick` function\n   * to toggle the state. The card will become controlled if this is not `undefined`.\n   */\n  expanded: (0, _controlled2.default)(_propTypes2.default.bool, 'onExpanderClick', 'defaultExpanded'),\n\n  /**\n   * An optional function to call when the expander is clicked.\n   */\n  onExpanderClick: _propTypes2.default.func,\n\n  /**\n   * The icon to use for the expander button. It is recommended to use this prop over\n   * the `expaderIconChildren` and `expanderIconClassName` since it provides more control.\n   */\n  expanderIcon: _propTypes2.default.element,\n\n  /**\n   * The tooltip position for the expander icon.\n   */\n  expanderTooltipPosition: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The optional tooltip to display for the expander icon.\n   */\n  expanderTooltipLabel: _propTypes2.default.node,\n\n  /**\n   * An optional delay before the tooltip appears for the expander icon on hover.\n   */\n  expanderTooltipDelay: _propTypes2.default.number,\n\n  /**\n   * Boolean if the card contains a table. It will update the styling accordingly.\n   * When using the `DataTable` component, do not wrap it in a `CardText` component.\n   *\n   * ```js\n   * <Card tableCard={true}>\n   *   <CardTitle title=\"Example />\n   *   <DataTable>\n   *     ...\n   *   </DataTable>\n   * </Card>\n   * ```\n   */\n  tableCard: _propTypes2.default.bool,\n\n  /**\n   * An optional function to call when the mouseover event is triggered.\n   */\n  onMouseOver: _propTypes2.default.func,\n\n  /**\n   * An optional function to call when the mouseleave event is triggered.\n   */\n  onMouseLeave: _propTypes2.default.func,\n\n  /**\n   * An optional function to call when the touchstart event is triggered.\n   */\n  onTouchStart: _propTypes2.default.func,\n\n  /**\n   * Boolean if the card expansion should be animated.\n   */\n  animate: _propTypes2.default.bool,\n\n  expanderIconClassName: (0, _deprecated2.default)(_propTypes2.default.string, 'Use `expanderIcon` instead'),\n  expanderIconChildren: (0, _deprecated2.default)(_propTypes2.default.node, 'Use `expanderIcon` instead'),\n  initiallyExpanded: (0, _deprecated2.default)(_propTypes2.default.bool, 'Use `defaultExpanded` instead'),\n  isExpanded: (0, _deprecated2.default)(_propTypes2.default.bool, 'Use `expanded` instead'),\n  iconChildren: (0, _deprecated2.default)(_propTypes2.default.node, 'Use the `expanderIconChildren` prop instead'),\n  iconClassName: (0, _deprecated2.default)(_propTypes2.default.string, 'Use the `expanderIconClassName` prop instead')\n};\nCard.defaultProps = {\n  animate: true,\n  expanderIcon: _react2.default.createElement(\n    _FontIcon2.default,\n    null,\n    'keyboard_arrow_down'\n  ),\n  expanderTooltipPosition: 'left'\n};\nCard.childContextTypes = _contextTypes2.default;\nexports.default = Card;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The `CardText` component is a simple wrapper for text or any content in a `Card`.\n * It really just adds correct padding and font color.\n */\nvar CardText = function (_PureComponent) {\n  _inherits(CardText, _PureComponent);\n\n  function CardText() {\n    _classCallCheck(this, CardText);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  CardText.prototype.render = function render() {\n    var _props = this.props,\n        Component = _props.component,\n        className = _props.className,\n        expandable = _props.expandable,\n        props = _objectWithoutProperties(_props, ['component', 'className', 'expandable']);\n\n    return _react2.default.createElement(Component, _extends({}, props, { className: (0, _classnames2.default)('md-card-text', className) }));\n  };\n\n  return CardText;\n}(_react.PureComponent);\n\nCardText.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: _propTypes2.default.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * The children to display.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * The component to render as.\n   */\n  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func, _propTypes2.default.object]).isRequired,\n\n  /**\n   * Boolean if this component should be expandable when there is a `CardExpander`\n   * above it in the `Card`.\n   */\n  expandable: _propTypes2.default.bool\n};\nCardText.defaultProps = {\n  component: 'section'\n};\nexports.default = CardText;","'use strict';\n\nexports.__esModule = true;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  onExpandClick: _propTypes2.default.func,\n  expanded: _propTypes2.default.bool,\n  icon: _propTypes2.default.element,\n  tooltipPosition: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left']),\n  tooltipLabel: _propTypes2.default.node,\n  tooltipDelay: _propTypes2.default.number\n};","/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n\n(function(){\n\n/*!\n * elasticlunr.js\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * Convenience function for instantiating a new elasticlunr index and configuring it\n * with the default pipeline functions and the passed config function.\n *\n * When using this convenience function a new index will be created with the\n * following functions already in the pipeline:\n * \n * 1. elasticlunr.trimmer - trim non-word character\n * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n * index\n * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n *\n *\n * Example:\n *\n *     var idx = elasticlunr(function () {\n *       this.addField('id');\n *       this.addField('title');\n *       this.addField('body');\n *       \n *       //this.setRef('id'); // default ref is 'id'\n *\n *       this.pipeline.add(function () {\n *         // some custom pipeline function\n *       });\n *     });\n * \n *    idx.addDoc({\n *      id: 1, \n *      title: 'Oracle released database 12g',\n *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n *    });\n * \n *    idx.addDoc({\n *      id: 2, \n *      title: 'Oracle released annual profit report',\n *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n *    });\n * \n *    # simple search\n *    idx.search('oracle database');\n * \n *    # search with query-time boosting\n *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n *\n * @param {Function} config A function that will be called with the new instance\n * of the elasticlunr.Index as both its context and first parameter. It can be used to\n * customize the instance of new elasticlunr.Index.\n * @namespace\n * @module\n * @return {elasticlunr.Index}\n *\n */\nvar elasticlunr = function (config) {\n  var idx = new elasticlunr.Index;\n\n  idx.pipeline.add(\n    elasticlunr.trimmer,\n    elasticlunr.stopWordFilter,\n    elasticlunr.stemmer\n  );\n\n  if (config) config.call(idx, idx);\n\n  return idx;\n};\n\nelasticlunr.version = \"0.9.5\";\n\n// only used this to make elasticlunr.js compatible with lunr-languages\n// this is a trick to define a global alias of elasticlunr\nlunr = elasticlunr;\n\n/*!\n * elasticlunr.utils\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * A namespace containing utils for the rest of the elasticlunr library\n */\nelasticlunr.utils = {};\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf Utils\n */\nelasticlunr.utils.warn = (function (global) {\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message);\n    }\n  };\n})(this);\n\n/**\n * Convert an object to string.\n *\n * In the case of `null` and `undefined` the function returns\n * an empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {object} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf Utils\n */\nelasticlunr.utils.toString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\";\n  }\n\n  return obj.toString();\n};\n/*!\n * elasticlunr.EventEmitter\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n * It manages adding and removing event handlers and triggering events and their handlers.\n *\n * Each event could has multiple corresponding functions,\n * these functions will be called as the sequence that they are added into the event.\n * \n * @constructor\n */\nelasticlunr.EventEmitter = function () {\n  this.events = {};\n};\n\n/**\n * Binds a handler function to a specific event(s).\n *\n * Can bind a single function to many different events in one call.\n *\n * @param {String} [eventName] The name(s) of events to bind this function to.\n * @param {Function} fn The function to call when an event is fired.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.addListener = function () {\n  var args = Array.prototype.slice.call(arguments),\n      fn = args.pop(),\n      names = args;\n\n  if (typeof fn !== \"function\") throw new TypeError (\"last argument must be a function\");\n\n  names.forEach(function (name) {\n    if (!this.hasHandler(name)) this.events[name] = [];\n    this.events[name].push(fn);\n  }, this);\n};\n\n/**\n * Removes a handler function from a specific event.\n *\n * @param {String} eventName The name of the event to remove this function from.\n * @param {Function} fn The function to remove from an event.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n  if (!this.hasHandler(name)) return;\n\n  var fnIndex = this.events[name].indexOf(fn);\n  if (fnIndex === -1) return;\n\n  this.events[name].splice(fnIndex, 1);\n\n  if (this.events[name].length == 0) delete this.events[name];\n};\n\n/**\n * Call all functions that bounded to the given event.\n *\n * Additional data can be passed to the event handler as arguments to `emit`\n * after the event name.\n *\n * @param {String} eventName The name of the event to emit.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.emit = function (name) {\n  if (!this.hasHandler(name)) return;\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  this.events[name].forEach(function (fn) {\n    fn.apply(undefined, args);\n  }, this);\n};\n\n/**\n * Checks whether a handler has ever been stored against an event.\n *\n * @param {String} eventName The name of the event to check.\n * @private\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n  return name in this.events;\n};\n/*!\n * elasticlunr.tokenizer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * A function for splitting a string into tokens.\n * Currently English is supported as default.\n * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n * the value of this property to set how you want strings are split into tokens.\n * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n * text process, then you'd better not change it.\n *\n * @module\n * @param {String} str The string that you want to tokenize.\n * @see elasticlunr.tokenizer.seperator\n * @return {Array}\n */\nelasticlunr.tokenizer = function (str) {\n  if (!arguments.length || str === null || str === undefined) return [];\n  if (Array.isArray(str)) {\n    var arr = str.filter(function(token) {\n      if (token === null || token === undefined) {\n        return false;\n      }\n\n      return true;\n    });\n\n    arr = arr.map(function (t) {\n      return elasticlunr.utils.toString(t).toLowerCase();\n    });\n\n    var out = [];\n    arr.forEach(function(item) {\n      var tokens = item.split(elasticlunr.tokenizer.seperator);\n      out = out.concat(tokens);\n    }, this);\n\n    return out;\n  }\n\n  return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n};\n\n/**\n * Default string seperator.\n */\nelasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n\n/**\n * The sperator used to split a string into tokens. Override this property to change the behaviour of\n * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see elasticlunr.tokenizer\n */\nelasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n\n/**\n * Set up customized string seperator\n *\n * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n */\nelasticlunr.tokenizer.setSeperator = function(sep) {\n    if (sep !== null && sep !== undefined && typeof(sep) === 'object') {\n        elasticlunr.tokenizer.seperator = sep;\n    }\n}\n\n/**\n * Reset string seperator\n *\n */\nelasticlunr.tokenizer.resetSeperator = function() {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n}\n\n/**\n * Get string seperator\n *\n */\nelasticlunr.tokenizer.getSeperator = function() {\n    return elasticlunr.tokenizer.seperator;\n}\n/*!\n * elasticlunr.Pipeline\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n * both documents tokens and query tokens.\n *\n * An instance of elasticlunr.Index will contain a pipeline\n * with a trimmer, a stop word filter, an English stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline, it will call each function in turn.\n *\n * The output of the functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nelasticlunr.Pipeline = function () {\n  this._queue = [];\n};\n\nelasticlunr.Pipeline.registeredFunctions = {};\n\n/**\n * Register a function in the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {Function} fn The function to register.\n * @param {String} label The label to register this function with\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in elasticlunr.Pipeline.registeredFunctions) {\n    elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n  }\n\n  fn.label = label;\n  elasticlunr.Pipeline.registeredFunctions[label] = fn;\n};\n\n/**\n * Get a registered function in the pipeline.\n *\n * @param {String} label The label of registered function.\n * @return {Function}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.getRegisteredFunction = function (label) {\n  if ((label in elasticlunr.Pipeline.registeredFunctions) !== true) {\n    return null;\n  }\n\n  return elasticlunr.Pipeline.registeredFunctions[label];\n};\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {Function} fn The function to check for.\n * @private\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions);\n\n  if (!isRegistered) {\n    elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n  }\n};\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised The serialised pipeline to load.\n * @return {elasticlunr.Pipeline}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.load = function (serialised) {\n  var pipeline = new elasticlunr.Pipeline;\n\n  serialised.forEach(function (fnName) {\n    var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n    if (fn) {\n      pipeline.add(fn);\n    } else {\n      throw new Error('Cannot load un-registered function: ' + fnName);\n    }\n  });\n\n  return pipeline;\n};\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {Function} functions Any number of functions to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments);\n\n  fns.forEach(function (fn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n    this._queue.push(fn);\n  }, this);\n};\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n * If existingFn is not found, throw an Exception.\n *\n * @param {Function} existingFn A function that already exists in the pipeline.\n * @param {Function} newFn The new function to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n  var pos = this._queue.indexOf(existingFn);\n  if (pos === -1) {\n    throw new Error('Cannot find existingFn');\n  }\n\n  this._queue.splice(pos + 1, 0, newFn);\n};\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n * If existingFn is not found, throw an Exception.\n *\n * @param {Function} existingFn A function that already exists in the pipeline.\n * @param {Function} newFn The new function to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n  var pos = this._queue.indexOf(existingFn);\n  if (pos === -1) {\n    throw new Error('Cannot find existingFn');\n  }\n\n  this._queue.splice(pos, 0, newFn);\n};\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {Function} fn The function to remove from the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._queue.indexOf(fn);\n  if (pos === -1) {\n    return;\n  }\n\n  this._queue.splice(pos, 1);\n};\n\n/**\n * Runs the current list of functions that registered in the pipeline against the\n * input tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @return {Array}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.run = function (tokens) {\n  var out = [],\n      tokenLength = tokens.length,\n      pipelineLength = this._queue.length;\n\n  for (var i = 0; i < tokenLength; i++) {\n    var token = tokens[i];\n\n    for (var j = 0; j < pipelineLength; j++) {\n      token = this._queue[j](token, i, tokens);\n      if (token === void 0 || token === null) break;\n    };\n\n    if (token !== void 0 && token !== null) out.push(token);\n  };\n\n  return out;\n};\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.reset = function () {\n  this._queue = [];\n};\n\n /**\n  * Get the pipeline if user want to check the pipeline.\n  *\n  * @memberOf Pipeline\n  */\n elasticlunr.Pipeline.prototype.get = function () {\n   return this._queue;\n };\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n * Only serialize pipeline function's name. Not storing function, so when\n * loading the archived JSON index file, corresponding pipeline function is \n * added by registered function of elasticlunr.Pipeline.registeredFunctions\n *\n * Logs a warning if the function has not been registered.\n *\n * @return {Array}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.toJSON = function () {\n  return this._queue.map(function (fn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n    return fn.label;\n  });\n};\n/*!\n * elasticlunr.Index\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.Index is object that manages a search index.  It contains the indexes\n * and stores all the tokens and document lookups.  It also provides the main\n * user facing API for the library.\n *\n * @constructor\n */\nelasticlunr.Index = function () {\n  this._fields = [];\n  this._ref = 'id';\n  this.pipeline = new elasticlunr.Pipeline;\n  this.documentStore = new elasticlunr.DocumentStore;\n  this.index = {};\n  this.eventEmitter = new elasticlunr.EventEmitter;\n  this._idfCache = {};\n\n  this.on('add', 'remove', 'update', (function () {\n    this._idfCache = {};\n  }).bind(this));\n};\n\n/**\n * Bind a handler to events being emitted by the index.\n *\n * The handler can be bound to many events at the same time.\n *\n * @param {String} [eventName] The name(s) of events to bind the function to.\n * @param {Function} fn The serialised set to load.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.on = function () {\n  var args = Array.prototype.slice.call(arguments);\n  return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n};\n\n/**\n * Removes a handler from an event being emitted by the index.\n *\n * @param {String} eventName The name of events to remove the function from.\n * @param {Function} fn The serialised set to load.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.off = function (name, fn) {\n  return this.eventEmitter.removeListener(name, fn);\n};\n\n/**\n * Loads a previously serialised index.\n *\n * Issues a warning if the index being imported was serialised\n * by a different version of elasticlunr.\n *\n * @param {Object} serialisedData The serialised set to load.\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.load = function (serialisedData) {\n  if (serialisedData.version !== elasticlunr.version) {\n    elasticlunr.utils.warn('version mismatch: current '\n                    + elasticlunr.version + ' importing ' + serialisedData.version);\n  }\n\n  var idx = new this;\n\n  idx._fields = serialisedData.fields;\n  idx._ref = serialisedData.ref;\n  idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n  idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n  idx.index = {};\n  for (var field in serialisedData.index) {\n    idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n  }\n\n  return idx;\n};\n\n/**\n * Adds a field to the list of fields that will be searchable within documents in the index.\n *\n * Remember that inner index is build based on field, which means each field has one inverted index.\n *\n * Fields should be added before any documents are added to the index, fields\n * that are added after documents are added to the index will only apply to new\n * documents added to the index.\n *\n * @param {String} fieldName The name of the field within the document that should be indexed\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.addField = function (fieldName) {\n  this._fields.push(fieldName);\n  this.index[fieldName] = new elasticlunr.InvertedIndex;\n  return this;\n};\n\n/**\n * Sets the property used to uniquely identify documents added to the index,\n * by default this property is 'id'.\n *\n * This should only be changed before adding documents to the index, changing\n * the ref property without resetting the index can lead to unexpected results.\n *\n * @param {String} refName The property to use to uniquely identify the\n * documents in the index.\n * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.setRef = function (refName) {\n  this._ref = refName;\n  return this;\n};\n\n/**\n *\n * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n *\n * Defaultly save all the original JSON documents.\n *\n * @param {Boolean} save Whether to save the original JSON documents.\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.saveDocument = function (save) {\n  this.documentStore = new elasticlunr.DocumentStore(save);\n  return this;\n};\n\n/**\n * Add a JSON format document to the index.\n *\n * This is the way new documents enter the index, this function will run the\n * fields from the document through the index's pipeline and then add it to\n * the index, it will then show up in search results.\n *\n * An 'add' event is emitted with the document that has been added and the index\n * the document has been added to. This event can be silenced by passing false\n * as the second argument to add.\n *\n * @param {Object} doc The JSON format document to add to the index.\n * @param {Boolean} emitEvent Whether or not to emit events, default true.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n  if (!doc) return;\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  var docRef = doc[this._ref];\n\n  this.documentStore.addDoc(docRef, doc);\n  this._fields.forEach(function (field) {\n    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n    this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n\n    var tokenCount = {};\n    fieldTokens.forEach(function (token) {\n      if (token in tokenCount) tokenCount[token] += 1;\n      else tokenCount[token] = 1;\n    }, this);\n\n    for (var token in tokenCount) {\n      var termFrequency = tokenCount[token];\n      termFrequency = Math.sqrt(termFrequency);\n      this.index[field].addToken(token, { ref: docRef, tf: termFrequency });\n    }\n  }, this);\n\n  if (emitEvent) this.eventEmitter.emit('add', doc, this);\n};\n\n/**\n * Removes a document from the index by doc ref.\n *\n * To make sure documents no longer show up in search results they can be\n * removed from the index using this method.\n *\n * A 'remove' event is emitted with the document that has been removed and the index\n * the document has been removed from. This event can be silenced by passing false\n * as the second argument to remove.\n *\n * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n *\n * @param {String|Integer} docRef The document ref to remove from the index.\n * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n * @memberOf Index\n */\nelasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n  if (!docRef) return;\n  if (this.documentStore.isDocStored() === false) {\n    return;\n  }\n\n  if (!this.documentStore.hasDoc(docRef)) return;\n  var doc = this.documentStore.getDoc(docRef);\n  this.removeDoc(doc, false);\n};\n\n/**\n * Removes a document from the index.\n * This remove operation could work even the original doc is not store in the DocumentStore.\n *\n * To make sure documents no longer show up in search results they can be\n * removed from the index using this method.\n *\n * A 'remove' event is emitted with the document that has been removed and the index\n * the document has been removed from. This event can be silenced by passing false\n * as the second argument to remove.\n *\n *\n * @param {Object} doc The document ref to remove from the index.\n * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n * @memberOf Index\n */\nelasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n  if (!doc) return;\n\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  var docRef = doc[this._ref];\n  if (!this.documentStore.hasDoc(docRef)) return;\n\n  this.documentStore.removeDoc(docRef);\n\n  this._fields.forEach(function (field) {\n    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n    fieldTokens.forEach(function (token) {\n      this.index[field].removeToken(token, docRef);\n    }, this);\n  }, this);\n\n  if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n};\n\n/**\n * Updates a document in the index.\n *\n * When a document contained within the index gets updated, fields changed,\n * added or removed, to make sure it correctly matched against search queries,\n * it should be updated in the index.\n *\n * This method is just a wrapper around `remove` and `add`\n *\n * An 'update' event is emitted with the document that has been updated and the index.\n * This event can be silenced by passing false as the second argument to update. Only\n * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n * are silenced.\n *\n * @param {Object} doc The document to update in the index.\n * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n * @see Index.prototype.remove\n * @see Index.prototype.add\n * @memberOf Index\n */\nelasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  this.removeDocByRef(doc[this._ref], false);\n  this.addDoc(doc, false);\n\n  if (emitEvent) this.eventEmitter.emit('update', doc, this);\n};\n\n/**\n * Calculates the inverse document frequency for a token within the index of a field.\n *\n * @param {String} token The token to calculate the idf of.\n * @param {String} field The field to compute idf.\n * @see Index.prototype.idf\n * @private\n * @memberOf Index\n */\nelasticlunr.Index.prototype.idf = function (term, field) {\n  var cacheKey = \"@\" + field + '/' + term;\n  if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n\n  var df = this.index[field].getDocFreq(term);\n  var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n  this._idfCache[cacheKey] = idf;\n\n  return idf;\n};\n\n/**\n * get fields of current index instance\n *\n * @return {Array}\n */\nelasticlunr.Index.prototype.getFields = function () {\n  return this._fields.slice();\n};\n\n/**\n * Searches the index using the passed query.\n * Queries should be a string, multiple words are allowed.\n *\n * If config is null, will search all fields defaultly, and lead to OR based query.\n * If config is specified, will search specified with query time boosting.\n *\n * All query tokens are passed through the same pipeline that document tokens\n * are passed through, so any language processing involved will be run on every\n * query term.\n *\n * Each query term is expanded, so that the term 'he' might be expanded to\n * 'hello' and 'help' if those terms were already included in the index.\n *\n * Matching documents are returned as an array of objects, each object contains\n * the matching document ref, as set for this index, and the similarity score\n * for this document against the query.\n *\n * @param {String} query The query to search the index with.\n * @param {JSON} userConfig The user query config, JSON format.\n * @return {Object}\n * @see Index.prototype.idf\n * @see Index.prototype.documentVector\n * @memberOf Index\n */\nelasticlunr.Index.prototype.search = function (query, userConfig) {\n  if (!query) return [];\n\n  var configStr = null;\n  if (userConfig != null) {\n    configStr = JSON.stringify(userConfig);\n  }\n\n  var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n\n  var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n\n  var queryResults = {};\n\n  for (var field in config) {\n    var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n    var fieldBoost = config[field].boost;\n\n    for (var docRef in fieldSearchResults) {\n      fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n    }\n\n    for (var docRef in fieldSearchResults) {\n      if (docRef in queryResults) {\n        queryResults[docRef] += fieldSearchResults[docRef];\n      } else {\n        queryResults[docRef] = fieldSearchResults[docRef];\n      }\n    }\n  }\n\n  var results = [];\n  for (var docRef in queryResults) {\n    results.push({ref: docRef, score: queryResults[docRef]});\n  }\n\n  results.sort(function (a, b) { return b.score - a.score; });\n  return results;\n};\n\n/**\n * search queryTokens in specified field.\n *\n * @param {Array} queryTokens The query tokens to query in this field.\n * @param {String} field Field to query in.\n * @param {elasticlunr.Configuration} config The user query config, JSON format.\n * @return {Object}\n */\nelasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n  var booleanType = config[fieldName].bool;\n  var expand = config[fieldName].expand;\n  var boost = config[fieldName].boost;\n  var scores = null;\n  var docTokens = {};\n\n  // Do nothing if the boost is 0\n  if (boost === 0) {\n    return;\n  }\n\n  queryTokens.forEach(function (token) {\n    var tokens = [token];\n    if (expand == true) {\n      tokens = this.index[fieldName].expandToken(token);\n    }\n    // Consider every query token in turn. If expanded, each query token\n    // corresponds to a set of tokens, which is all tokens in the \n    // index matching the pattern queryToken* .\n    // For the set of tokens corresponding to a query token, find and score\n    // all matching documents. Store those scores in queryTokenScores, \n    // keyed by docRef.\n    // Then, depending on the value of booleanType, combine the scores\n    // for this query token with previous scores.  If booleanType is OR,\n    // then merge the scores by summing into the accumulated total, adding\n    // new document scores are required (effectively a union operator). \n    // If booleanType is AND, accumulate scores only if the document \n    // has previously been scored by another query token (an intersection\n    // operation0. \n    // Furthermore, since when booleanType is AND, additional \n    // query tokens can't add new documents to the result set, use the\n    // current document set to limit the processing of each new query \n    // token for efficiency (i.e., incremental intersection).\n    \n    var queryTokenScores = {};\n    tokens.forEach(function (key) {\n      var docs = this.index[fieldName].getDocs(key);\n      var idf = this.idf(key, fieldName);\n      \n      if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n          for (var docRef in scores) {\n              if (docRef in docs) {\n                  filteredDocs[docRef] = docs[docRef];\n              }\n          }\n          docs = filteredDocs;\n      }\n      // only record appeared token for retrieved documents for the\n      // original token, not for expaned token.\n      // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n      // query token appear in that document.\n      // so expanded token should not be added into docTokens, if added, this will pollute the\n      // coordNorm\n      if (key == token) {\n        this.fieldSearchStats(docTokens, key, docs);\n      }\n\n      for (var docRef in docs) {\n        var tf = this.index[fieldName].getTermFrequency(key, docRef);\n        var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n        var fieldLengthNorm = 1;\n        if (fieldLength != 0) {\n          fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n        }\n\n        var penality = 1;\n        if (key != token) {\n          // currently I'm not sure if this penality is enough,\n          // need to do verification\n          penality = (1 - (key.length - token.length) / key.length) * 0.15;\n        }\n\n        var score = tf * idf * fieldLengthNorm * penality;\n\n        if (docRef in queryTokenScores) {\n          queryTokenScores[docRef] += score;\n        } else {\n          queryTokenScores[docRef] = score;\n        }\n      }\n    }, this);\n    \n    scores = this.mergeScores(scores, queryTokenScores, booleanType);\n  }, this);\n\n  scores = this.coordNorm(scores, docTokens, queryTokens.length);\n  return scores;\n};\n\n/**\n * Merge the scores from one set of tokens into an accumulated score table.\n * Exact operation depends on the op parameter. If op is 'AND', then only the\n * intersection of the two score lists is retained. Otherwise, the union of\n * the two score lists is returned. For internal use only.\n *\n * @param {Object} bool accumulated scores. Should be null on first call.\n * @param {String} scores new scores to merge into accumScores.\n * @param {Object} op merge operation (should be 'AND' or 'OR').\n *\n */\n\nelasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n        return scores; \n    }\n    if (op == 'AND') {\n        var intersection = {};\n        for (var docRef in scores) {\n            if (docRef in accumScores) {\n                intersection[docRef] = accumScores[docRef] + scores[docRef];\n            }\n        }\n        return intersection;\n    } else {\n        for (var docRef in scores) {\n            if (docRef in accumScores) {\n                accumScores[docRef] += scores[docRef];\n            } else {\n                accumScores[docRef] = scores[docRef];\n            }\n        }\n        return accumScores;\n    }\n};\n\n\n/**\n * Record the occuring query token of retrieved doc specified by doc field.\n * Only for inner user.\n *\n * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n * @param {String} token query token\n * @param {Object} docs the retrieved documents of the query token\n *\n */\nelasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n  for (var doc in docs) {\n    if (doc in docTokens) {\n      docTokens[doc].push(token);\n    } else {\n      docTokens[doc] = [token];\n    }\n  }\n};\n\n/**\n * coord norm the score of a doc.\n * if a doc contain more query tokens, then the score will larger than the doc\n * contains less query tokens.\n *\n * only for inner use.\n *\n * @param {Object} results first results\n * @param {Object} docs field search results of a token\n * @param {Integer} n query token number\n * @return {Object}\n */\nelasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n  for (var doc in scores) {\n    if (!(doc in docTokens)) continue;\n    var tokens = docTokens[doc].length;\n    scores[doc] = scores[doc] * tokens / n;\n  }\n\n  return scores;\n};\n\n/**\n * Returns a representation of the index ready for serialisation.\n *\n * @return {Object}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.toJSON = function () {\n  var indexJson = {};\n  this._fields.forEach(function (field) {\n    indexJson[field] = this.index[field].toJSON();\n  }, this);\n\n  return {\n    version: elasticlunr.version,\n    fields: this._fields,\n    ref: this._ref,\n    documentStore: this.documentStore.toJSON(),\n    index: indexJson,\n    pipeline: this.pipeline.toJSON()\n  };\n};\n\n/**\n * Applies a plugin to the current index.\n *\n * A plugin is a function that is called with the index as its context.\n * Plugins can be used to customise or extend the behaviour the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied to the index.\n *\n * The plugin function will be called with the index as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index as its context.\n *\n * Example:\n *\n *     var myPlugin = function (idx, arg1, arg2) {\n *       // `this` is the index to be extended\n *       // apply any extensions etc here.\n *     }\n *\n *     var idx = elasticlunr(function () {\n *       this.use(myPlugin, 'arg1', 'arg2')\n *     })\n *\n * @param {Function} plugin The plugin to apply.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.use = function (plugin) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  args.unshift(this);\n  plugin.apply(this, args);\n};\n/*!\n * elasticlunr.DocumentStore\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n * documents stored in index.\n *\n * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n *\n * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n * could not use JSON document to generate snippets of search results.\n *\n * @param {Boolean} save If the original JSON document should be stored.\n * @constructor\n * @module\n */\nelasticlunr.DocumentStore = function (save) {\n  if (save === null || save === undefined) {\n    this._save = true;\n  } else {\n    this._save = save;\n  }\n\n  this.docs = {};\n  this.docInfo = {};\n  this.length = 0;\n};\n\n/**\n * Loads a previously serialised document store\n *\n * @param {Object} serialisedData The serialised document store to load.\n * @return {elasticlunr.DocumentStore}\n */\nelasticlunr.DocumentStore.load = function (serialisedData) {\n  var store = new this;\n\n  store.length = serialisedData.length;\n  store.docs = serialisedData.docs;\n  store.docInfo = serialisedData.docInfo;\n  store._save = serialisedData.save;\n\n  return store;\n};\n\n/**\n * check if current instance store the original doc\n *\n * @return {Boolean}\n */\nelasticlunr.DocumentStore.prototype.isDocStored = function () {\n  return this._save;\n};\n\n/**\n * Stores the given doc in the document store against the given id.\n * If docRef already exist, then update doc.\n *\n * Document is store by original JSON format, then you could use original document to generate search snippets.\n *\n * @param {Integer|String} docRef The key used to store the JSON format doc.\n * @param {Object} doc The JSON format doc.\n */\nelasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n  if (!this.hasDoc(docRef)) this.length++;\n\n  if (this._save === true) {\n    this.docs[docRef] = clone(doc);\n  } else {\n    this.docs[docRef] = null;\n  }\n};\n\n/**\n * Retrieves the JSON doc from the document store for a given key.\n *\n * If docRef not found, return null.\n * If user set not storing the documents, return null.\n *\n * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n * @return {Object}\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n  if (this.hasDoc(docRef) === false) return null;\n  return this.docs[docRef];\n};\n\n/**\n * Checks whether the document store contains a key (docRef).\n *\n * @param {Integer|String} docRef The id to look up in the document store.\n * @return {Boolean}\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n  return docRef in this.docs;\n};\n\n/**\n * Removes the value for a key in the document store.\n *\n * @param {Integer|String} docRef The id to remove from the document store.\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n  if (!this.hasDoc(docRef)) return;\n\n  delete this.docs[docRef];\n  delete this.docInfo[docRef];\n  this.length--;\n};\n\n/**\n * Add field length of a document's field tokens from pipeline results.\n * The field length of a document is used to do field length normalization even without the original JSON document stored.\n *\n * @param {Integer|String} docRef document's id or reference\n * @param {String} fieldName field name\n * @param {Integer} length field length\n */\nelasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n  if (docRef === null || docRef === undefined) return;\n  if (this.hasDoc(docRef) == false) return;\n\n  if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n  this.docInfo[docRef][fieldName] = length;\n};\n\n/**\n * Update field length of a document's field tokens from pipeline results.\n * The field length of a document is used to do field length normalization even without the original JSON document stored.\n *\n * @param {Integer|String} docRef document's id or reference\n * @param {String} fieldName field name\n * @param {Integer} length field length\n */\nelasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n  if (docRef === null || docRef === undefined) return;\n  if (this.hasDoc(docRef) == false) return;\n\n  this.addFieldLength(docRef, fieldName, length);\n};\n\n/**\n * get field length of a document by docRef\n *\n * @param {Integer|String} docRef document id or reference\n * @param {String} fieldName field name\n * @return {Integer} field length\n */\nelasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n  if (docRef === null || docRef === undefined) return 0;\n\n  if (!(docRef in this.docs)) return 0;\n  if (!(fieldName in this.docInfo[docRef])) return 0;\n  return this.docInfo[docRef][fieldName];\n};\n\n/**\n * Returns a JSON representation of the document store used for serialisation.\n *\n * @return {Object} JSON format\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.toJSON = function () {\n  return {\n    docs: this.docs,\n    docInfo: this.docInfo,\n    length: this.length,\n    save: this._save\n  };\n};\n\n/**\n * Cloning object\n *\n * @param {Object} object in JSON format\n * @return {Object} copied object\n */\nfunction clone(obj) {\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  var copy = obj.constructor();\n\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n\n  return copy;\n}\n/*!\n * elasticlunr.stemmer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @module\n * @param {String} str The string to stem\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var   stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) {  w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return porterStemmer;\n})();\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n/*!\n * elasticlunr.stopWordFilter\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.stopWordFilter is an English language stop words filter, any words\n * contained in the stop word list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n *\n * @module\n * @param {String} token The token to pass through the filter\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.stopWordFilter = function (token) {\n  if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n    return token;\n  }\n};\n\n/**\n * Remove predefined stop words\n * if user want to use customized stop words, user could use this function to delete\n * all predefined stopwords.\n *\n * @return {null}\n */\nelasticlunr.clearStopWords = function () {\n  elasticlunr.stopWordFilter.stopWords = {};\n};\n\n/**\n * Add customized stop words\n * user could use this function to add customized stop words\n * \n * @params {Array} words customized stop words\n * @return {null}\n */\nelasticlunr.addStopWords = function (words) {\n  if (words == null || Array.isArray(words) === false) return;\n\n  words.forEach(function (word) {\n    elasticlunr.stopWordFilter.stopWords[word] = true;\n  }, this);\n};\n\n/**\n * Reset to default stop words\n * user could use this function to restore default stop words\n *\n * @return {null}\n */\nelasticlunr.resetStopWords = function () {\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n};\n\nelasticlunr.defaultStopWords = {\n  \"\": true,\n  \"a\": true,\n  \"able\": true,\n  \"about\": true,\n  \"across\": true,\n  \"after\": true,\n  \"all\": true,\n  \"almost\": true,\n  \"also\": true,\n  \"am\": true,\n  \"among\": true,\n  \"an\": true,\n  \"and\": true,\n  \"any\": true,\n  \"are\": true,\n  \"as\": true,\n  \"at\": true,\n  \"be\": true,\n  \"because\": true,\n  \"been\": true,\n  \"but\": true,\n  \"by\": true,\n  \"can\": true,\n  \"cannot\": true,\n  \"could\": true,\n  \"dear\": true,\n  \"did\": true,\n  \"do\": true,\n  \"does\": true,\n  \"either\": true,\n  \"else\": true,\n  \"ever\": true,\n  \"every\": true,\n  \"for\": true,\n  \"from\": true,\n  \"get\": true,\n  \"got\": true,\n  \"had\": true,\n  \"has\": true,\n  \"have\": true,\n  \"he\": true,\n  \"her\": true,\n  \"hers\": true,\n  \"him\": true,\n  \"his\": true,\n  \"how\": true,\n  \"however\": true,\n  \"i\": true,\n  \"if\": true,\n  \"in\": true,\n  \"into\": true,\n  \"is\": true,\n  \"it\": true,\n  \"its\": true,\n  \"just\": true,\n  \"least\": true,\n  \"let\": true,\n  \"like\": true,\n  \"likely\": true,\n  \"may\": true,\n  \"me\": true,\n  \"might\": true,\n  \"most\": true,\n  \"must\": true,\n  \"my\": true,\n  \"neither\": true,\n  \"no\": true,\n  \"nor\": true,\n  \"not\": true,\n  \"of\": true,\n  \"off\": true,\n  \"often\": true,\n  \"on\": true,\n  \"only\": true,\n  \"or\": true,\n  \"other\": true,\n  \"our\": true,\n  \"own\": true,\n  \"rather\": true,\n  \"said\": true,\n  \"say\": true,\n  \"says\": true,\n  \"she\": true,\n  \"should\": true,\n  \"since\": true,\n  \"so\": true,\n  \"some\": true,\n  \"than\": true,\n  \"that\": true,\n  \"the\": true,\n  \"their\": true,\n  \"them\": true,\n  \"then\": true,\n  \"there\": true,\n  \"these\": true,\n  \"they\": true,\n  \"this\": true,\n  \"tis\": true,\n  \"to\": true,\n  \"too\": true,\n  \"twas\": true,\n  \"us\": true,\n  \"wants\": true,\n  \"was\": true,\n  \"we\": true,\n  \"were\": true,\n  \"what\": true,\n  \"when\": true,\n  \"where\": true,\n  \"which\": true,\n  \"while\": true,\n  \"who\": true,\n  \"whom\": true,\n  \"why\": true,\n  \"will\": true,\n  \"with\": true,\n  \"would\": true,\n  \"yet\": true,\n  \"you\": true,\n  \"your\": true\n};\n\nelasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n/*!\n * elasticlunr.trimmer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.trimmer is a pipeline function for trimming non word\n * characters from the begining and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @module\n * @param {String} token The token to pass through the filter\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.trimmer = function (token) {\n  if (token === null || token === undefined) {\n    throw new Error('token should not be undefined');\n  }\n\n  return token\n    .replace(/^\\W+/, '')\n    .replace(/\\W+$/, '');\n};\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n/*!\n * elasticlunr.InvertedIndex\n * Copyright (C) 2016 Wei Song\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * elasticlunr.InvertedIndex is used for efficiently storing and\n * lookup of documents that contain a given token.\n *\n * @constructor\n */\nelasticlunr.InvertedIndex = function () {\n  this.root = { docs: {}, df: 0 };\n};\n\n/**\n * Loads a previously serialised inverted index.\n *\n * @param {Object} serialisedData The serialised inverted index to load.\n * @return {elasticlunr.InvertedIndex}\n */\nelasticlunr.InvertedIndex.load = function (serialisedData) {\n  var idx = new this;\n  idx.root = serialisedData.root;\n\n  return idx;\n};\n\n/**\n * Adds a {token: tokenInfo} pair to the inverted index.\n * If the token already exist, then update the tokenInfo.\n *\n * tokenInfo format: { ref: 1, tf: 2}\n * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n * the document.\n *\n * By default this function starts at the root of the current inverted index, however\n * it can start at any node of the inverted index if required.\n *\n * @param {String} token \n * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n * @param {Object} root An optional node at which to start looking for the\n * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n * is used.\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n  var root = root || this.root,\n      idx = 0;\n\n  while (idx <= token.length - 1) {\n    var key = token[idx];\n\n    if (!(key in root)) root[key] = {docs: {}, df: 0};\n    idx += 1;\n    root = root[key];\n  }\n\n  var docRef = tokenInfo.ref;\n  if (!root.docs[docRef]) {\n    // if this doc not exist, then add this doc\n    root.docs[docRef] = {tf: tokenInfo.tf};\n    root.df += 1;\n  } else {\n    // if this doc already exist, then update tokenInfo\n    root.docs[docRef] = {tf: tokenInfo.tf};\n  }\n};\n\n/**\n * Checks whether a token is in this elasticlunr.InvertedIndex.\n * \n *\n * @param {String} token The token to be checked\n * @return {Boolean}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n  if (!token) return false;\n\n  var node = this.root;\n\n  for (var i = 0; i < token.length; i++) {\n    if (!node[token[i]]) return false;\n    node = node[token[i]];\n  }\n\n  return true;\n};\n\n/**\n * Retrieve a node from the inverted index for a given token.\n * If token not found in this InvertedIndex, return null.\n * \n *\n * @param {String} token The token to get the node for.\n * @return {Object}\n * @see InvertedIndex.prototype.get\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getNode = function (token) {\n  if (!token) return null;\n\n  var node = this.root;\n\n  for (var i = 0; i < token.length; i++) {\n    if (!node[token[i]]) return null;\n    node = node[token[i]];\n  }\n\n  return node;\n};\n\n/**\n * Retrieve the documents of a given token.\n * If token not found, return {}.\n *\n *\n * @param {String} token The token to get the documents for.\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n  var node = this.getNode(token);\n  if (node == null) {\n    return {};\n  }\n\n  return node.docs;\n};\n\n/**\n * Retrieve term frequency of given token in given docRef.\n * If token or docRef not found, return 0.\n *\n *\n * @param {String} token The token to get the documents for.\n * @param {String|Integer} docRef\n * @return {Integer}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n  var node = this.getNode(token);\n\n  if (node == null) {\n    return 0;\n  }\n\n  if (!(docRef in node.docs)) {\n    return 0;\n  }\n\n  return node.docs[docRef].tf;\n};\n\n/**\n * Retrieve the document frequency of given token.\n * If token not found, return 0.\n *\n *\n * @param {String} token The token to get the documents for.\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n  var node = this.getNode(token);\n\n  if (node == null) {\n    return 0;\n  }\n\n  return node.df;\n};\n\n/**\n * Remove the document identified by document's ref from the token in the inverted index.\n *\n *\n * @param {String} token Remove the document from which token.\n * @param {String} ref The ref of the document to remove from given token.\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n  if (!token) return;\n  var node = this.getNode(token);\n\n  if (node == null) return;\n\n  if (ref in node.docs) {\n    delete node.docs[ref];\n    node.df -= 1;\n  }\n};\n\n/**\n * Find all the possible suffixes of given token using tokens currently in the inverted index.\n * If token not found, return empty Array.\n *\n * @param {String} token The token to expand.\n * @return {Array}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n  if (token == null || token == '') return [];\n  var memo = memo || [];\n\n  if (root == void 0) {\n    root = this.getNode(token);\n    if (root == null) return memo;\n  }\n\n  if (root.df > 0) memo.push(token);\n\n  for (var key in root) {\n    if (key === 'docs') continue;\n    if (key === 'df') continue;\n    this.expandToken(token + key, memo, root[key]);\n  }\n\n  return memo;\n};\n\n/**\n * Returns a representation of the inverted index ready for serialisation.\n *\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.toJSON = function () {\n  return {\n    root: this.root\n  };\n};\n\n/*!\n * elasticlunr.Configuration\n * Copyright (C) 2016 Wei Song\n */\n \n /** \n  * elasticlunr.Configuration is used to analyze the user search configuration.\n  * \n  * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n  * \n  * Currently configuration supports:\n  * 1. query-time boosting, user could set how to boost each field.\n  * 2. boolean model chosing, user could choose which boolean model to use for each field.\n  * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n  * \n  * Query time boosting must be configured by field category, \"boolean\" model could be configured \n  * by both field category or globally as the following example. Field configuration for \"boolean\"\n  * will overwrite global configuration.\n  * Token expand could be configured both by field category or golbally. Local field configuration will\n  * overwrite global configuration.\n  * \n  * configuration example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * \"bool\" field configuation overwrite global configuation example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\"},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * \"expand\" example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\"},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\",\n  *   expand: true\n  * }\n  * \n  * \"expand\" example for field category:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\", expand: true},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * setting the boost to 0 ignores the field (this will only search the title):\n  * {\n  *   fields:{\n  *     title: {boost: 1},\n  *     body: {boost: 0}\n  *   }\n  * }\n  *\n  * then, user could search with configuration to do query-time boosting.\n  * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n  * \n  * \n  * @constructor\n  * \n  * @param {String} config user configuration\n  * @param {Array} fields fields of index instance\n  * @module\n  */\nelasticlunr.Configuration = function (config, fields) {\n  var config = config || '';\n\n  if (fields == undefined || fields == null) {\n    throw new Error('fields should not be null');\n  }\n\n  this.config = {};\n\n  var userConfig;\n  try {\n    userConfig = JSON.parse(config);\n    this.buildUserConfig(userConfig, fields);\n  } catch (error) {\n    elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n    this.buildDefaultConfig(fields);\n  }\n};\n\n/**\n * Build default search configuration.\n * \n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n  this.reset();\n  fields.forEach(function (field) {\n    this.config[field] = {\n      boost: 1,\n      bool: \"OR\",\n      expand: false\n    };\n  }, this);\n};\n\n/**\n * Build user configuration.\n * \n * @param {JSON} config User JSON configuratoin\n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n  var global_bool = \"OR\";\n  var global_expand = false;\n\n  this.reset();\n  if ('bool' in config) {\n    global_bool = config['bool'] || global_bool;\n  }\n\n  if ('expand' in config) {\n    global_expand = config['expand'] || global_expand;\n  }\n\n  if ('fields' in config) {\n    for (var field in config['fields']) {\n      if (fields.indexOf(field) > -1) {\n        var field_config = config['fields'][field];\n        var field_expand = global_expand;\n        if (field_config.expand != undefined) {\n          field_expand = field_config.expand;\n        }\n\n        this.config[field] = {\n          boost: (field_config.boost || field_config.boost === 0) ? field_config.boost : 1,\n          bool: field_config.bool || global_bool,\n          expand: field_expand\n        };\n      } else {\n        elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n      }\n    }\n  } else {\n    this.addAllFields2UserConfig(global_bool, global_expand, fields);\n  }\n};\n\n/**\n * Add all fields to user search configuration.\n * \n * @param {String} bool Boolean model\n * @param {String} expand Expand model\n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n  fields.forEach(function (field) {\n    this.config[field] = {\n      boost: 1,\n      bool: bool,\n      expand: expand\n    };\n  }, this);\n};\n\n/**\n * get current user configuration\n */\nelasticlunr.Configuration.prototype.get = function () {\n  return this.config;\n};\n\n/**\n * reset user search configuration.\n */\nelasticlunr.Configuration.prototype.reset = function () {\n  this.config = {};\n};\n/**\n * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n * much bigger that not good for browser usage.\n *\n */\n\n\n/*!\n * lunr.SortedSet\n * Copyright (C) 2016 Oliver Nightingale\n */\n\n/**\n * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n * order.\n *\n * @constructor\n */\nlunr.SortedSet = function () {\n  this.length = 0\n  this.elements = []\n}\n\n/**\n * Loads a previously serialised sorted set.\n *\n * @param {Array} serialisedData The serialised set to load.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.load = function (serialisedData) {\n  var set = new this\n\n  set.elements = serialisedData\n  set.length = serialisedData.length\n\n  return set\n}\n\n/**\n * Inserts new items into the set in the correct position to maintain the\n * order.\n *\n * @param {Object} The objects to add to this set.\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.add = function () {\n  var i, element\n\n  for (i = 0; i < arguments.length; i++) {\n    element = arguments[i]\n    if (~this.indexOf(element)) continue\n    this.elements.splice(this.locationFor(element), 0, element)\n  }\n\n  this.length = this.elements.length\n}\n\n/**\n * Converts this sorted set into an array.\n *\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.toArray = function () {\n  return this.elements.slice()\n}\n\n/**\n * Creates a new array with the results of calling a provided function on every\n * element in this sorted set.\n *\n * Delegates to Array.prototype.map and has the same signature.\n *\n * @param {Function} fn The function that is called on each element of the\n * set.\n * @param {Object} ctx An optional object that can be used as the context\n * for the function fn.\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.map = function (fn, ctx) {\n  return this.elements.map(fn, ctx)\n}\n\n/**\n * Executes a provided function once per sorted set element.\n *\n * Delegates to Array.prototype.forEach and has the same signature.\n *\n * @param {Function} fn The function that is called on each element of the\n * set.\n * @param {Object} ctx An optional object that can be used as the context\n * @memberOf SortedSet\n * for the function fn.\n */\nlunr.SortedSet.prototype.forEach = function (fn, ctx) {\n  return this.elements.forEach(fn, ctx)\n}\n\n/**\n * Returns the index at which a given element can be found in the\n * sorted set, or -1 if it is not present.\n *\n * @param {Object} elem The object to locate in the sorted set.\n * @returns {Number}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.indexOf = function (elem) {\n  var start = 0,\n      end = this.elements.length,\n      sectionLength = end - start,\n      pivot = start + Math.floor(sectionLength / 2),\n      pivotElem = this.elements[pivot]\n\n  while (sectionLength > 1) {\n    if (pivotElem === elem) return pivot\n\n    if (pivotElem < elem) start = pivot\n    if (pivotElem > elem) end = pivot\n\n    sectionLength = end - start\n    pivot = start + Math.floor(sectionLength / 2)\n    pivotElem = this.elements[pivot]\n  }\n\n  if (pivotElem === elem) return pivot\n\n  return -1\n}\n\n/**\n * Returns the position within the sorted set that an element should be\n * inserted at to maintain the current order of the set.\n *\n * This function assumes that the element to search for does not already exist\n * in the sorted set.\n *\n * @param {Object} elem The elem to find the position for in the set\n * @returns {Number}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.locationFor = function (elem) {\n  var start = 0,\n      end = this.elements.length,\n      sectionLength = end - start,\n      pivot = start + Math.floor(sectionLength / 2),\n      pivotElem = this.elements[pivot]\n\n  while (sectionLength > 1) {\n    if (pivotElem < elem) start = pivot\n    if (pivotElem > elem) end = pivot\n\n    sectionLength = end - start\n    pivot = start + Math.floor(sectionLength / 2)\n    pivotElem = this.elements[pivot]\n  }\n\n  if (pivotElem > elem) return pivot\n  if (pivotElem < elem) return pivot + 1\n}\n\n/**\n * Creates a new lunr.SortedSet that contains the elements in the intersection\n * of this set and the passed set.\n *\n * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.intersect = function (otherSet) {\n  var intersectSet = new lunr.SortedSet,\n      i = 0, j = 0,\n      a_len = this.length, b_len = otherSet.length,\n      a = this.elements, b = otherSet.elements\n\n  while (true) {\n    if (i > a_len - 1 || j > b_len - 1) break\n\n    if (a[i] === b[j]) {\n      intersectSet.add(a[i])\n      i++, j++\n      continue\n    }\n\n    if (a[i] < b[j]) {\n      i++\n      continue\n    }\n\n    if (a[i] > b[j]) {\n      j++\n      continue\n    }\n  };\n\n  return intersectSet\n}\n\n/**\n * Makes a copy of this set\n *\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.clone = function () {\n  var clone = new lunr.SortedSet\n\n  clone.elements = this.toArray()\n  clone.length = clone.elements.length\n\n  return clone\n}\n\n/**\n * Creates a new lunr.SortedSet that contains the elements in the union\n * of this set and the passed set.\n *\n * @param {lunr.SortedSet} otherSet The set to union with this set.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.union = function (otherSet) {\n  var longSet, shortSet, unionSet\n\n  if (this.length >= otherSet.length) {\n    longSet = this, shortSet = otherSet\n  } else {\n    longSet = otherSet, shortSet = this\n  }\n\n  unionSet = longSet.clone()\n\n  for(var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++){\n    unionSet.add(shortSetElements[i])\n  }\n\n  return unionSet\n}\n\n/**\n * Returns a representation of the sorted set ready for serialisation.\n *\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.toJSON = function () {\n  return this.toArray()\n}\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr\n  }))\n})();\n"],"sourceRoot":""}