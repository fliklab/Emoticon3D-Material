{"version":3,"sources":["webpack:///./src/pages/pageIndex.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO/index.jsx"],"names":["styles","fullPage","display","flexDirection","topBlank","width","height","bottomBlank","content","flex","Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","title","className","style","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","undefined","__webpack_require__","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","urljoin","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","type","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"6OASMA,EAAS,CACbC,SAAU,CACRC,QAAS,OACTC,cAAe,UAEjBC,SAAU,CACRC,MAAO,OACPC,OAAQ,SAEVC,YAAa,CACXF,MAAO,OACPC,OAAQ,QAEVE,QAAS,CACPH,MAAO,OACPI,KAAM,IAGJC,4FACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUC,MAAM,QAC3CL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBC,MAAOzB,EAAOQ,SAC7CU,EAAAC,EAAAC,cAACM,EAAAP,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAQO,IAAOC,WACfV,EAAAC,EAAAC,cAAA,QAAMS,IAAI,YAAYC,KAASH,IAAOI,QAAZ,gBAE5Bb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKpB,UAAWA,IAChBM,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAarB,UAAWA,UAXdsB,IAAMC,WAkBXzB,YAER,IAAM0B,EAAS,kCC/CtB,IAAAC,EAAAC,EAAAC,IAIC,WAwDD,kBASA,OA/DA,SAAAC,GACA,IAAAC,EAAA,GAGA,GAAAD,EAAA,GAAAE,MAAA,kBAAAF,EAAAG,OAAA,GACA,IAAAC,EAAAJ,EAAAK,QACAL,EAAA,GAAAI,EAAAJ,EAAA,GAIAA,EAAA,GAAAE,MAAA,gBACAF,EAAA,GAAAA,EAAA,GAAAM,QAAA,2BAEAN,EAAA,GAAAA,EAAA,GAAAM,QAAA,0BAGA,QAAAC,EAAA,EAAmBA,EAAAP,EAAAG,OAAqBI,IAAA,CACxC,IAAAC,EAAAR,EAAAO,GAEA,oBAAAC,EACA,UAAAC,UAAA,kCAAAD,GAGA,KAAAA,IAEAD,EAAA,IAEAC,IAAAF,QAAA,cAIAE,EAFAD,EAAAP,EAAAG,OAAA,EAEAK,EAAAF,QAAA,aAGAE,EAAAF,QAAA,cAGAL,EAAAS,KAAAF,IAIA,IAAAG,EAAAV,EAAAW,KAAA,KAOAC,GAHAF,IAAAL,QAAA,yBAGAQ,MAAA,KAGA,OAFAH,EAAAE,EAAAR,SAAAQ,EAAAV,OAAA,UAAAU,EAAAD,KAAA,KAcAG,CANA,iBAAAC,UAAA,GACAA,UAAA,GAEA,GAAAC,MAAAC,KAAAF,cAjEmCG,EAAAC,QAAAD,EAAAC,QAAArB,SACqCsB,KAAAvB,EAAA,mBAAjBD,EAAA,GAAiBA,EAAAqB,KAAAE,EAAAE,EAAAF,EAAAD,GAAAtB,KAAAsB,EAAAC,QAAAtB,+HCGlEyB,4FACJpD,OAAA,WAAS,IAEHY,EACAyC,EACAC,EACAC,EALGC,EACiCtD,KAAKC,MAArCsD,EADDD,EACCC,SAAUC,EADXF,EACWE,SAAUC,EADrBH,EACqBG,QAK5B,GAAIA,EAAS,CACX,IAAMC,EAAWH,EAASI,YACvBjD,EAAUgD,EAAVhD,MACHyC,EAAcO,EAASP,YACnBO,EAASP,YACTI,EAASK,QACbR,EAAQM,EAASG,MACjBR,EAAUS,IAAQhD,IAAOI,QAASJ,IAAOiD,WAAYP,QAErD9C,EAAQI,IAAOC,UACfoC,EAAcrC,IAAOkD,gBACrBZ,EAAQtC,IAAOmD,SAEjBb,EAAQU,IAAQhD,IAAOI,QAASJ,IAAOiD,WAAYX,GACnD,IAAMc,EAAUJ,IAAQhD,IAAOI,QAASJ,IAAOiD,YACzCI,EAAkB,CACtB,CACEC,WAAY,oBACZC,QAAS,UACTC,IAAKJ,EACLK,KAAM7D,EACN8D,cAAe1D,IAAO2D,aAAe3D,IAAO2D,aAAe,KAmC/D,OAhCIhB,GACFU,EAAgB9B,KAAK,CACnB,CACE+B,WAAY,oBACZC,QAAS,iBACTK,gBAAiB,CACf,CACEL,QAAS,WACTM,SAAU,EACVC,KAAM,CACJC,MAAOxB,EACPkB,KAAM7D,EACN0C,YAKR,CACEgB,WAAY,oBACZC,QAAS,cACTC,IAAKJ,EACLK,KAAM7D,EACN8D,cAAe1D,IAAO2D,aAAe3D,IAAO2D,aAAe,GAC3DK,SAAUpE,EACV0C,MAAO,CACLiB,QAAS,cACTC,IAAKlB,GAEPD,iBAKJ9C,EAAAC,EAAAC,cAACM,EAAAP,EAAD,KAEED,EAAAC,EAAAC,cAAA,QAAMgE,KAAK,cAAc5E,QAASwD,IAClC9C,EAAAC,EAAAC,cAAA,QAAMgE,KAAK,QAAQ5E,QAASyD,IAG5B/C,EAAAC,EAAAC,cAAA,UAAQwE,KAAK,uBACVC,KAAKC,UAAUd,IAIlB9D,EAAAC,EAAAC,cAAA,QAAM2E,SAAS,SAASvF,QAAS8D,EAAUJ,EAAUa,IACpDT,EAAUpD,EAAAC,EAAAC,cAAA,QAAM2E,SAAS,UAAUvF,QAAQ,YAAe,KAC3DU,EAAAC,EAAAC,cAAA,QAAM2E,SAAS,WAAWvF,QAASe,IACnCL,EAAAC,EAAAC,cAAA,QAAM2E,SAAS,iBAAiBvF,QAASwD,IACzC9C,EAAAC,EAAAC,cAAA,QAAM2E,SAAS,WAAWvF,QAASyD,IACnC/C,EAAAC,EAAAC,cAAA,QACE2E,SAAS,YACTvF,QAASmB,IAAOqE,YAAcrE,IAAOqE,YAAc,KAIrD9E,EAAAC,EAAAC,cAAA,QAAMgE,KAAK,eAAe5E,QAAQ,wBAClCU,EAAAC,EAAAC,cAAA,QACEgE,KAAK,kBACL5E,QAASmB,IAAOsE,YAActE,IAAOsE,YAAc,KAErD/E,EAAAC,EAAAC,cAAA,QAAMgE,KAAK,gBAAgB5E,QAASe,IACpCL,EAAAC,EAAAC,cAAA,QAAMgE,KAAK,sBAAsB5E,QAASwD,IAC1C9C,EAAAC,EAAAC,cAAA,QAAMgE,KAAK,gBAAgB5E,QAASyD,SA7F1B9B,aAmGH4B","file":"component---src-pages-page-index-jsx-9468298217d1f5dfcb21.js","sourcesContent":["/** src/pages/index.jsx */\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing\";\r\nimport SEO from \"../components/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nconst styles = {\r\n  fullPage: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  topBlank: {\r\n    width: \"100%\",\r\n    height: \"200px\"\r\n  },\r\n  bottomBlank: {\r\n    width: \"100%\",\r\n    height: \"70px\"\r\n  },\r\n  content: {\r\n    width: \"100%\",\r\n    flex: 1\r\n  }\r\n};\r\nclass Index extends React.Component {\r\n  render() {\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout location={this.props.location} title='Home'>\r\n        <div className='index-container' style={styles.content}>\r\n          <Helmet>\r\n            <title>{config.siteTitle}</title>\r\n            <link rel='canonical' href={`${config.siteUrl}/pageindex`} />\r\n          </Helmet>\r\n          <SEO postEdges={postEdges} />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [fields___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}