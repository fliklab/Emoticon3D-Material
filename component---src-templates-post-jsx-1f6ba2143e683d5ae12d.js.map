{"version":3,"sources":["webpack:///./src/components/UserInfo/index.jsx","webpack:///./src/components/Disqus/index.jsx","webpack:///./src/components/PostInfo/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/components/PostSuggestions/index.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/index.jsx","webpack:///./src/components/ToolbarActions/index.jsx","webpack:///./src/components/Footer/index.jsx","webpack:///./src/components/Navigation/NavList.jsx","webpack:///./src/components/Navigation/index.jsx","webpack:///./src/components/BottomNav/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx"],"names":["UserInfo","render","_this$props$config","this","props","config","userAvatar","userName","userLocation","userDescription","userLinks","userTwitter","expanded","userLinksElement","react_default","a","createElement","UserLinks","labeled","Card_default","className","CardTitle_default","expander","avatar","Avatars_default","src","role","title","subtitle","dist","username","options","count","CardText_default","expandable","IconSeparator_default","label","iconBefore","FontIcons_default","iconClassName","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","_this$props","postNode","disqusShortname","post","frontmatter","url","urljoin","siteUrl","pathPrefix","fields","slug","icon","main_default","shortname","identifier","category_id","onNewComment","Snackbars_default","onDismiss","PostInfo","moment","date","format","dateFormat","timeToRead","gatsby_browser_entry","to","kebabCase_default","category","SocialLinks","postPath","mobile","iconSize","renderShareCount","filter","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostSuggestions","prevSlug","prevTitle","nextSlug","nextTitle","forceFontSize","forceSize","PostTemplate","_React$Component","handleResize","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","location","pageContext","nexttitle","nextslug","prevtitle","prevslug","postOverlapClass","data","markdownRemark","id","postDefaultCategoryID","coverHeight","layout","Helmet_default","siteTitle","rel","href","SEO","postSEO","PostCover","coverClassName","Cards_default","components_PostInfo","dangerouslySetInnerHTML","__html","html","PostTags","tags","components_SocialLinks","components_UserInfo","components_Disqus","components_PostSuggestions_PostSuggestions","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","fixedFooter","siteDescription","siteRss","siteFBAppID","siteGATrackingID","dateFromFormat","userEmail","copyright","replace","substr","module","exports","getLinkElements","map","link","react__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_2___default","flat","secondary","key","Toolbar","Footer","Buttons_default","GetNavList","NavList","primaryText","leftIcon","component","Link","divider","forEach","Navigation","children","LocalTitle","footerLinks","NavigationDrawers_default","drawerTitle","toolbarTitle","contentClassName","navItems","mobileDrawerType","NavigationDrawer","DrawerTypes","TEMPORARY","tabletDrawerType","desktopDrawerType","toolbarActions","components_ToolbarActions","components_Footer","BottomNav","MainLayout","components_Navigation","name","content","components_BottomNav","react__WEBPACK_IMPORTED_MODULE_2___default","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","style","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","image","postURL","postMeta","cover","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","fileEdges","coverNodeList","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","length","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","query","PostCoverComponent","allFile","edges","_590853412"],"mappings":"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","file":"component---src-templates-post-jsx-1f6ba2143e683d5ae12d.js","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport IconSeparator from \"react-md/lib/Helpers/IconSeparator\";\nimport { Follow } from \"react-twitter-widgets\";\nimport UserLinks from \"../UserLinks\";\nimport \"./UserInfo.scss\";\n\nclass UserInfo extends Component {\n  render() {\n    const {\n      userAvatar,\n      userName,\n      userLocation,\n      userDescription,\n      userLinks,\n      userTwitter\n    } = this.props.config;\n    const { expanded } = this.props;\n    const userLinksElement = (\n      <UserLinks config={this.props.config} labeled={expanded} />\n    );\n    if (!userAvatar && !userName && !userLocation && !userDescription) {\n      if (userLinks) {\n        return (\n          <Card className=\"md-grid md-cell md-cell--12 user-info\">\n            {userLinksElement}\n          </Card>\n        );\n      }\n      return null;\n    }\n    return (\n      <Card className=\"md-grid md-cell md-cell--12 user-info\">\n        <CardTitle\n          expander={!expanded}\n          avatar={userAvatar && <Avatar src={userAvatar} role=\"presentation\" />}\n          title={userName && userName}\n          subtitle={\n            userTwitter ? (\n              <Follow\n                username={userTwitter}\n                options={{ count: expanded ? \"none\" : \"none\" }}\n              />\n            ) : (\n              \"Author\"\n            )\n          }\n        />\n        <CardText expandable={!expanded}>\n          {userLocation && (\n            <IconSeparator label={userLocation} iconBefore>\n              <FontIcon iconClassName=\"fa fa-map-marker\" />\n            </IconSeparator>\n          )}\n          <p>{userDescription && userDescription}</p>\n          {userLinksElement}\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Snackbar from \"react-md/lib/Snackbars\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode, expanded } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n\n    return (\n      <Card className=\"md-grid md-cell md-cell--12\">\n        <CardTitle\n          title=\"Comments\"\n          avatar={<Avatar icon={<FontIcon>comment</FontIcon>} />}\n          expander={!expanded}\n        />\n        <CardText expandable={!expanded}>\n          <ReactDisqusComments\n            shortname={config.disqusShortname}\n            identifier={post.title}\n            title={post.title}\n            url={url}\n            category_id={post.category_id}\n            onNewComment={this.notifyAboutComment}\n          />\n        </CardText>\n        <Snackbar\n          toasts={this.state.toasts}\n          onDismiss={this.onSnackbarDismiss}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from 'react';\nimport CardTitle from 'react-md/lib/Cards/CardTitle';\nimport Avatar from 'react-md/lib/Avatars';\nimport FontIcon from 'react-md/lib/FontIcons';\nimport { Link } from 'gatsby';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport config from '../../../data/SiteConfig';\nimport './PostInfo.scss';\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props;\n    const post = postNode.frontmatter;\n    return (\n      <div className='post-info'>\n        <CardTitle\n          avatar={<Avatar icon={<FontIcon iconClassName='fa fa-calendar' />} />}\n          title={`Published on ${moment(postNode.fields.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`출력예상시간 : ${postNode.timeToRead}시간 이내`}\n        />\n        <Link\n          className='category-link'\n          to={`/categories/${_.kebabCase(post.category)}`}\n        >\n          <CardTitle\n            avatar={\n              <Avatar icon={<FontIcon iconClassName='fa fa-folder-open' />} />\n            }\n            title='MY 콜렉션'\n            subtitle={post.category}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default PostInfo;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React, { Component } from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport \"./PostSuggestions.scss\";\n\nexport default class PostSuggestions extends Component {\n  render() {\n    const { prevSlug, prevTitle, nextSlug, nextTitle } = this.props;\n\n    return (\n      <div className=\"post-suggestions md-grid md-cell--12\">\n        <Link to={prevSlug} className=\"post-suggestion\">\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_back\n          </FontIcon>\n          <div className=\"headline-container hide-on-mobile\">\n            <h2 className=\"md-body-2 secondary-color\">Previous</h2>\n            <h6 className=\"md-headline secondary-color\">{prevTitle}</h6>\n          </div>\n        </Link>\n        <Link to={nextSlug} className=\"post-suggestion\">\n          <div className=\"headline-container\">\n            <h2 className=\"md-body-2 secondary-color\">Next</h2>\n            <h6 className=\"md-headline secondary-color\">{nextTitle}</h6>\n          </div>\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_forward\n          </FontIcon>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Card from 'react-md/lib/Cards';\nimport CardText from 'react-md/lib/Cards/CardText';\nimport Layout from '../layout';\nimport UserInfo from '../components/UserInfo';\nimport Disqus from '../components/Disqus';\nimport PostTags from '../components/PostTags';\nimport PostCover from '../components/PostCover';\nimport PostInfo from '../components/PostInfo';\nimport SocialLinks from '../components/SocialLinks';\nimport PostSuggestions from '../components/PostSuggestions';\nimport SEO from '../components/SEO';\nimport config from '../../data/SiteConfig';\nimport './b16-tomorrow-dark.css';\nimport './post.scss';\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { location, pageContext } = this.props;\n    const { slug, nexttitle, nextslug, prevtitle, prevslug } = pageContext;\n    const expanded = !mobile;\n    const postOverlapClass = mobile ? 'post-overlap-mobile' : 'post-overlap';\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <Layout location={location}>\n        <div className='post-page md-grid md-grid--no-spacing'>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel='canonical' href={`${config.siteUrl}${post.id}`} />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <PostCover\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName='md-grid md-cell--9 post-cover'\n          />\n          <div\n            className={`md-grid md-cell--9 post-page-contents mobile-fix ${postOverlapClass}`}\n          >\n            <Card className='md-grid md-cell md-cell--12 post'>\n              <CardText className='post-body'>\n                <h1 className='md-display-2 post-header'>{post.title}</h1>\n                <PostInfo postNode={postNode} />\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </CardText>\n              <div className='post-meta'>\n                <PostTags tags={post.tags} />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={mobile}\n                />\n              </div>\n            </Card>\n            <UserInfo\n              className='md-grid md-cell md-cell--12'\n              config={config}\n              expanded={expanded}\n            />\n            <Disqus postNode={postNode} expanded={expanded} />\n          </div>\n\n          <PostSuggestions\n            prevSlug={prevslug}\n            prevTitle={prevtitle}\n            nextSlug={nextslug}\n            nextTitle={nexttitle}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: 'Emoticon - 3DYo', // Site title.\n  siteTitleShort: '3DYo', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: 'Emoticon - 3DYo', // Alternative site title for SEO.\n  siteLogo: '/logos/logo-1024.png', // Logo used for SEO and manifest.\n  siteUrl: 'https://fliklab.github.io/Emoticon3D-Material/',\n  pathPrefix: 'Emoticon3D-Material', // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  fixedFooter: false, // Whether the footer component is fixed, i.e. always visible\n  siteDescription: 'A GatsbyJS stater with Material design in mind.', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  siteFBAppID: '1825356251115265', // FB Application ID for using app insights\n  siteGATrackingID: 'UA-47311644-4', // Tracking code ID for google analytics.\n  disqusShortname: 'https-vagr9k-github-io-gatsby-material-starter', // Disqus shortname.\n  postDefaultCategoryID: '추가하기', // Default category for posts.\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\n  dateFormat: 'YYYY/MM/DD', // Date format for display.\n  userName: 'Emoticon', // Username to display in the author segment.\n  userEmail: 'Emoticon-HCI@emoticon.com', // Email used for RSS feed's author segment\n  userTwitter: '', // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: 'CAU, Seoul', // User location to display in the author segment.\n  userAvatar: 'https://api.adorable.io/avatars/150/test.png', // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: 'GitHub',\n      url: 'https://github.com/fliklab/Emoticon3D-Material',\n      iconClassName: 'fa fa-github'\n    },\n    {\n      label: 'Twitter',\n      url: 'https://twitter.com/',\n      iconClassName: 'fa fa-twitter'\n    },\n    {\n      label: 'Email',\n      url: 'jsh852@gmail.com',\n      iconClassName: 'fa fa-envelope'\n    }\n  ],\n  copyright: 'UI Design Project by Team Emoticon, 2019-2 HCI' // Copyright string for the footer of the website and RSS feed.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === '/') {\n  config.pathPrefix = '';\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === '/')\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== '/')\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./UserLinks.scss\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <Button\n        icon={!labeled}\n        flat={labeled}\n        secondary\n        key={link.label}\n        iconClassName={link.iconClassName}\n        href={link.url}\n      >\n        {labeled ? link.label : \"\"}\n      </Button>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport UserLinks from \"../UserLinks\";\nimport \"./ToolbarActions.scss\";\n\nclass Toolbar extends Component {\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"toolbar-actions\">\n        <div className=\"userlinks-container\">\n          <UserLinks config={config} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport Button from 'react-md/lib/Buttons';\nimport { Link } from 'gatsby';\nimport UserLinks from '../UserLinks';\nimport config from '../../../data/SiteConfig';\nimport './Footer.scss';\n\nclass Footer extends Component {\n  render() {\n    const url = config.siteRss;\n    const { userLinks } = this.props;\n    const { copyright, fixedFooter } = config;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer className={fixedFooter ? 'footer footer-fixed' : 'footer'}>\n        {userLinks ? <UserLinks config={config} labeled /> : null}\n        <div className='notice-container'>\n          <div className='copyright'>\n            <h4>{copyright}</h4>\n          </div>\n\n          <div className='rss'>\n            <Link to={url}>\n              <Button flat secondary iconClassName='fa fa-rss'>\n                Subscribe\n              </Button>\n            </Link>\n          </div>\n          <div className='based-on'>\n            <h4>\n              Based on{' '}\n              <a href='https://github.com/Vagr9K/gatsby-material-starter'>\n                Gatsby Material Starter\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      leftIcon: <FontIcon>home</FontIcon>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        leftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    leftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/about/\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React, { Component } from \"react\";\nimport NavigationDrawer from \"react-md/lib/NavigationDrawers\";\nimport ToolbarActions from \"../ToolbarActions\";\nimport Footer from \"../Footer\";\nimport GetNavList from \"./NavList\";\nimport \"./Navigation.scss\";\n\nclass Navigation extends Component {\n  render() {\n    const { children, config, LocalTitle } = this.props;\n    const footerLinks = LocalTitle !== \"About\";\n    return (\n      <NavigationDrawer\n        drawerTitle={config.siteTitle}\n        toolbarTitle={LocalTitle}\n        contentClassName=\"main-content\"\n        navItems={GetNavList(config)}\n        mobileDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        tabletDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        desktopDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        toolbarActions={<ToolbarActions config={config} />}\n      >\n        <div className=\"main-container\">{children}</div>\n        <Footer userLinks={footerLinks} />\n      </NavigationDrawer>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Button from 'react-md/lib/Buttons';\nimport { Link } from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport './BottomNav.scss';\n\nclass BottomNav extends Component {\n  render() {\n    return (\n      <footer className='footer footer-fixed'>\n        <div className='boxes-container'>\n          <Button\n            className='user-button'\n            icon='fa-home'\n            secondary\n            key='about'\n            iconClassName='fa fa-home'\n            href='/Emoticon3D-Material/'\n          >\n            <p>반갑다</p>\n          </Button>\n          <Button\n            className='user-button'\n            icon='fa-beer'\n            secondary\n            key='menu1'\n            iconClassName='fa fa-heart'\n            href='/Emoticon3D-Material/about'\n          >\n            <p>친구야</p>\n          </Button>\n\n          <Button\n            className='user-button'\n            icon='faHome' // ??\n            secondary\n            key='variable-md-colors-warn'\n            iconClassName='fa fa-comment'\n            href='/Emoticon3D-Material/ThisIsNotAbout/about2'\n          >\n            <p>일요일은</p>\n          </Button>\n          <Button\n            className='user-button'\n            icon='faHome' // ??\n            secondary\n            key='menu3'\n            iconClassName='fa fa-book'\n            href='/Emoticon3D-Material/the-butterfly-of-the-edge'\n          >\n            <p>제발좀</p>\n          </Button>\n          <Button\n            className='user-button'\n            icon='faHome' // ???\n            secondary\n            key='menu4'\n            iconClassName='fa fa-tag'\n            href='/Emoticon3D-Material/-gatsby-material-starter'\n          >\n            <p>쉬게해줘</p>\n          </Button>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default BottomNav;\n","/** src/layout/index.jsx */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport 'font-awesome/scss/font-awesome.scss';\nimport { Link } from '@reach/router';\nimport { FontIcon } from 'react-md';\n\nimport Navigation from '../components/Navigation';\nimport config from '../../data/SiteConfig';\nimport './index.scss';\nimport './global.scss';\n\nimport BottomNav from '../components/BottomNav';\n\nconst TO_PREFIX = '';\n\n// navLinks에 항목을 추가/수정하면 하단바에도 적용됩니다.\n//아이콘은 여기서 https://fontawesome.com/icons?d=gallery\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Navigation config={config} LocalTitle={this.props.title}>\n        <div>\n          <Helmet>\n            <meta name='description' content={config.siteDescription} />\n          </Helmet>\n          {children}\n          <BottomNav />\n        </div>\n      </Navigation>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n"],"sourceRoot":""}